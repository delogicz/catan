package view;

import java.net.URISyntaxException;

import controller.SetUpControl;
import game.Settings;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.geometry.Pos;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.RadioButton;
import javafx.scene.control.TextField;
import javafx.scene.control.ToggleGroup;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.HBox;
import javafx.scene.layout.StackPane;
import javafx.scene.layout.VBox;
import javafx.scene.paint.Color;
import javafx.scene.text.Text;
import javafx.stage.Stage;
import model.PlayerColor;
import model.SetUp;

public class SetUpSkin extends StackPane{
	
	private SetUp setUp;
	private SetUpControl setUpControl;
	
	private RadioButton red, yellow, blue, white;
	private ToggleGroup toggleGroupColor;
	
	/**
	 * Constructor
	 * @param setUp
	 * @param setUpControl
	 */
	public SetUpSkin(SetUp setUp, SetUpControl setUpControl){
		
		super();
		this.setUp = setUp;
		this.setUpControl = setUpControl;
		
		setPrefSize(Settings.GAME_SKIN_WIDTH/2, Settings.GAME_SKIN_HEIGHT/2.7);
		setStyle("-fx-background-color: darkred; -fx-padding: 10;");
//		String path = "";
//		try {
//			path = SetUpSkin.class.getResource("/img/setUpSkin.jpeg" ).toURI().toString();
//		} catch (URISyntaxException e) {
//			System.out.println(e.getMessage() + " Couldn't find image of SetUpSkin.");
//		}
//		Image image = new Image(path, Settings.GAME_SKIN_WIDTH, Settings.GAME_SKIN_HEIGHT, false, false);
//		ImageView backgroundSetUp = new ImageView(image);
//		getChildren().add(backgroundSetUp);
		
		addElements();
		
	}
	
	/**
	 * Adds texts, textfields, radiobuttons, etc .
	 */
	private void addElements() {
		
		GridPane gridPane = new GridPane();
		
		Text welcome = new Text("Welcome to The Settlers of Catan.\nPlease enter"
						+ " your name and pick a color to join the game.");
		welcome.setFill(Color.ANTIQUEWHITE);
		Text name = new Text("Name:            ");
		name.setFill(Color.ANTIQUEWHITE);
		TextField enterName = new TextField();
		HBox hBoxName = new HBox();
		hBoxName.getChildren().addAll(name, enterName);
		hBoxName.setAlignment(Pos.BASELINE_LEFT);
		
		Text color = new Text("Pick a color:  ");
		color.setFill(Color.ANTIQUEWHITE);
		red = new RadioButton("Red");
		red.setTextFill(Color.ANTIQUEWHITE);
		red.setSelected(true);
		yellow = new RadioButton("Yellow");
		yellow.setTextFill(Color.ANTIQUEWHITE);
		white = new RadioButton("White");
		white.setTextFill(Color.ANTIQUEWHITE);
		blue = new RadioButton("Blue");
		blue.setTextFill(Color.ANTIQUEWHITE);
		toggleGroupColor = new ToggleGroup();
		red.setToggleGroup(toggleGroupColor);
		yellow.setToggleGroup(toggleGroupColor);
		white.setToggleGroup(toggleGroupColor);
		blue.setToggleGroup(toggleGroupColor);
		
		if(setUp.getPlayers() != null){
			String welcomeText = welcome.getText();
			welcome.setText(welcomeText + "\nCurrently " 
						+ setUp.getPlayers().size() + " people want to play.");
			
//			for(Player player: setUp.getPlayers()){
//				PlayerColor playerColor = player.getPlayerColor();
//				switch(playerColor){
//				case RED: 		red.setDisable(true);
//				case YELLOW: 	yellow.setDisable(true);
//				case BLUE: 		blue.setDisable(true);
//				case WHITE: 	white.setDisable(true);
//				default: ;
//				}
//			}
		}
		
		VBox vBoxColor = new VBox();
		vBoxColor.getChildren().addAll(red, yellow, white, blue);
		HBox hBoxColor = new HBox();
		hBoxColor.getChildren().addAll(color, vBoxColor);
		
		Button login = new Button("Login");
		
		login.setOnAction(new EventHandler<ActionEvent>(){

			@Override
			public void handle(ActionEvent event) {
				String enteredName = enterName.getText();
				PlayerColor chosenColor = getChosenColor();
				
				if(setUpControl.validName(enteredName) && setUpControl.validColor(chosenColor)){
					setUpControl.joinAsNewPlayer(red.isSelected(), yellow.isSelected(), blue.isSelected(), enteredName);		
				}
				else if(!setUpControl.validName(enteredName)){
					tryAgain("The name is already taken.\nPlease enter another one.");
				}
				else if(!setUpControl.validColor(chosenColor)){
					tryAgain("The color is already taken.\nPlease choose another one.");
				}
				
			}
			
		});
		
		gridPane.add(welcome, 0, 0);
		gridPane.add(hBoxName, 0, 1);
		gridPane.add(hBoxColor, 0, 2);
		gridPane.add(login, 1, 3);
		gridPane.setHgap(50); 
		gridPane.setVgap(30);
		
		getChildren().add(gridPane);	
		
	}
	
	/**
	 * @return PlayerColor matching to color of selected radiobutton
	 */
	private PlayerColor getChosenColor(){
		RadioButton selected = (RadioButton)toggleGroupColor.getSelectedToggle();
		if(selected == red) 		return PlayerColor.RED;
		else if(selected == yellow) return PlayerColor.YELLOW;
		else if(selected == blue) 	return PlayerColor.BLUE;
		else 						return PlayerColor.WHITE;
	}
	
	/**
	 * Creates PopUp-Stage to show an error-message
	 * @param message to show in PopUp-Stage
	 */
	private void tryAgain(String message){
		Stage popUpStage = new Stage();
		popUpStage.initOwner(setUp.getGameManager().getApp().getStage());
		StackPane pane = new StackPane();
		pane.setStyle("-fx-background-color: darkred; -fx-padding: 10;");
		Text popUpMessage = new Text(message);
		popUpMessage.setFill(Color.ANTIQUEWHITE);
		pane.getChildren().add(popUpMessage);
		Scene popUpScene = new Scene(pane, 250, 80);
		popUpStage.setScene(popUpScene);
		popUpStage.show();
	}
	
}
