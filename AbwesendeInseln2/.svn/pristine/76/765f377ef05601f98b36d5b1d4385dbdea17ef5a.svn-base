<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (1.8.0_92) on Fri Jan 19 22:08:16 CET 2018 -->
<title>Client</title>
<meta name="date" content="2018-01-19">
<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
<script type="text/javascript" src="../script.js"></script>
</head>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="Client";
        }
    }
    catch(err) {
    }
//-->
var methods = {"i0":10,"i1":10,"i2":10,"i3":10,"i4":10,"i5":10,"i6":10,"i7":10,"i8":10,"i9":10,"i10":10,"i11":10,"i12":10,"i13":10,"i14":10,"i15":10,"i16":10,"i17":10,"i18":10,"i19":10,"i20":10,"i21":10,"i22":10,"i23":10,"i24":10,"i25":10,"i26":10,"i27":10,"i28":10};
var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
var altColor = "altColor";
var rowColor = "rowColor";
var tableTab = "tableTab";
var activeTableTab = "activeTableTab";
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/Client.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-files/index-1.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../network/BotClient.html" title="class in network"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
<li><a href="../network/ClientQueueHandler.html" title="class in network"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?network/Client.html" target="_top">Frames</a></li>
<li><a href="Client.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li><a href="#nested.classes.inherited.from.class.java.lang.Thread">Nested</a>&nbsp;|&nbsp;</li>
<li><a href="#fields.inherited.from.class.java.lang.Thread">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a name="skip.navbar.top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle">network</div>
<h2 title="Class Client" class="title">Class Client</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li>java.lang.Object</li>
<li>
<ul class="inheritance">
<li>java.lang.Thread</li>
<li>
<ul class="inheritance">
<li>network.Client</li>
</ul>
</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<dl>
<dt>All Implemented Interfaces:</dt>
<dd>java.lang.Runnable</dd>
</dl>
<dl>
<dt>Direct Known Subclasses:</dt>
<dd><a href="../network/BotClient.html" title="class in network">BotClient</a></dd>
</dl>
<hr>
<br>
<pre>public class <span class="typeNameLabel">Client</span>
extends java.lang.Thread</pre>
<div class="block">This class is the Client for the connection to the server</div>
<dl>
<dt><span class="simpleTagLabel">Author:</span></dt>
<dd>Felixi, Stefanie Kloss</dd>
</dl>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- ======== NESTED CLASS SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="nested.class.summary">
<!--   -->
</a>
<h3>Nested Class Summary</h3>
<ul class="blockList">
<li class="blockList"><a name="nested.classes.inherited.from.class.java.lang.Thread">
<!--   -->
</a>
<h3>Nested classes/interfaces inherited from class&nbsp;java.lang.Thread</h3>
<code>java.lang.Thread.State, java.lang.Thread.UncaughtExceptionHandler</code></li>
</ul>
</li>
</ul>
<!-- =========== FIELD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="field.summary">
<!--   -->
</a>
<h3>Field Summary</h3>
<ul class="blockList">
<li class="blockList"><a name="fields.inherited.from.class.java.lang.Thread">
<!--   -->
</a>
<h3>Fields inherited from class&nbsp;java.lang.Thread</h3>
<code>MAX_PRIORITY, MIN_PRIORITY, NORM_PRIORITY</code></li>
</ul>
</li>
</ul>
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor.summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colOne" scope="col">Constructor and Description</th>
</tr>
<tr class="altColor">
<td class="colOne"><code><span class="memberNameLink"><a href="../network/Client.html#Client-java.lang.String-int-game.GameManager-">Client</a></span>(java.lang.String&nbsp;host,
      int&nbsp;port,
      <a href="../game/GameManager.html" title="class in game">GameManager</a>&nbsp;gameManager)</code>
<div class="block">Creates new Client</div>
</td>
</tr>
</table>
</li>
</ul>
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method.summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr id="i0" class="altColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../network/Client.html#getClientId--">getClientId</a></span>()</code>
<div class="block">Getter for ClientId</div>
</td>
</tr>
<tr id="i1" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../network/Client.html#handleInput-java.lang.String-">handleInput</a></span>(java.lang.String&nbsp;text)</code>
<div class="block">Handles the JSON text input and handles which message is send by the server</div>
</td>
</tr>
<tr id="i2" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../network/Client.html#isBotClient--">isBotClient</a></span>()</code>
<div class="block">add Bots</div>
</td>
</tr>
<tr id="i3" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../network/Client.html#receive--">receive</a></span>()</code>
<div class="block">Receives messages from Server</div>
</td>
</tr>
<tr id="i4" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../network/Client.html#run--">run</a></span>()</code>
<div class="block">Run-Method of Client Thread</div>
</td>
</tr>
<tr id="i5" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../network/Client.html#sendAcceptTrade-int-">sendAcceptTrade</a></span>(int&nbsp;tradeID)</code>
<div class="block">When the client accepts the trade</div>
</td>
</tr>
<tr id="i6" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../network/Client.html#sendBuyDevelopmentCard--">sendBuyDevelopmentCard</a></span>()</code>
<div class="block">Sends request to buy a development card</div>
</td>
</tr>
<tr id="i7" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../network/Client.html#sendCancelTrade-int-">sendCancelTrade</a></span>(int&nbsp;tradeID)</code>
<div class="block">When the client wants to cancel the trade</div>
</td>
</tr>
<tr id="i8" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../network/Client.html#sendChat-java.lang.String-">sendChat</a></span>(java.lang.String&nbsp;text)</code>
<div class="block">sends text for the chat</div>
</td>
</tr>
<tr id="i9" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../network/Client.html#sendConstructCity-model.Vertex-">sendConstructCity</a></span>(<a href="../model/Vertex.html" title="class in model">Vertex</a>&nbsp;target)</code>
<div class="block">sends construct city request</div>
</td>
</tr>
<tr id="i10" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../network/Client.html#sendConstructRoad-model.Edge-">sendConstructRoad</a></span>(<a href="../model/Edge.html" title="class in model">Edge</a>&nbsp;target)</code>
<div class="block">sends construct road request</div>
</td>
</tr>
<tr id="i11" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../network/Client.html#sendConstructSettlement-model.Vertex-">sendConstructSettlement</a></span>(<a href="../model/Vertex.html" title="class in model">Vertex</a>&nbsp;target)</code>
<div class="block">sends construct settlement request</div>
</td>
</tr>
<tr id="i12" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../network/Client.html#sendEndTurn--">sendEndTurn</a></span>()</code>
<div class="block">sends end turn message to the server</div>
</td>
</tr>
<tr id="i13" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../network/Client.html#sendGiveCards-int-int-int-int-int-">sendGiveCards</a></span>(int&nbsp;lumber,
             int&nbsp;brick,
             int&nbsp;wool,
             int&nbsp;grain,
             int&nbsp;ore)</code>
<div class="block">When the client has to pay resources for example by the robber</div>
</td>
</tr>
<tr id="i14" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../network/Client.html#sendHello--">sendHello</a></span>()</code>
<div class="block">sends server handshake</div>
</td>
</tr>
<tr id="i15" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../network/Client.html#sendMaritimeTrade-int:A-int:A-">sendMaritimeTrade</a></span>(int[]&nbsp;offer,
                 int[]&nbsp;demand)</code>
<div class="block">When the client handles with the harbor</div>
</td>
</tr>
<tr id="i16" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../network/Client.html#sendMonopoly-model.ResourceType-">sendMonopoly</a></span>(<a href="../model/ResourceType.html" title="enum in model">ResourceType</a>&nbsp;res)</code>
<div class="block">Sends Monopoly played</div>
</td>
</tr>
<tr id="i17" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../network/Client.html#sendNotAcceptTrade-int-">sendNotAcceptTrade</a></span>(int&nbsp;tradeID)</code>
<div class="block">When the client doesn't accept the trade</div>
</td>
</tr>
<tr id="i18" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../network/Client.html#sendPlayerInit-java.lang.String-java.lang.String-">sendPlayerInit</a></span>(java.lang.String&nbsp;name,
              java.lang.String&nbsp;color)</code>
<div class="block">sends player initialize message</div>
</td>
</tr>
<tr id="i19" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../network/Client.html#sendPlayKnight-model.Tile-int-">sendPlayKnight</a></span>(<a href="../model/Tile.html" title="class in model">Tile</a>&nbsp;targetTile,
              int&nbsp;targetId)</code>
<div class="block">sends Play knight event</div>
</td>
</tr>
<tr id="i20" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../network/Client.html#sendRoadBuilding-model.Edge-">sendRoadBuilding</a></span>(<a href="../model/Edge.html" title="class in model">Edge</a>&nbsp;road)</code>
<div class="block">Sends Road Building card played</div>
</td>
</tr>
<tr id="i21" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../network/Client.html#sendRoadBuilding-model.Edge-model.Edge-">sendRoadBuilding</a></span>(<a href="../model/Edge.html" title="class in model">Edge</a>&nbsp;roadOne,
                <a href="../model/Edge.html" title="class in model">Edge</a>&nbsp;roadTwo)</code>
<div class="block">Sends Road Building card played</div>
</td>
</tr>
<tr id="i22" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../network/Client.html#sendRollDice--">sendRollDice</a></span>()</code>
<div class="block">sends roll dice request</div>
</td>
</tr>
<tr id="i23" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../network/Client.html#sendSetRobber-model.Tile-int-">sendSetRobber</a></span>(<a href="../model/Tile.html" title="class in model">Tile</a>&nbsp;tile,
             int&nbsp;robbedPlayer)</code>
<div class="block">When you rolled a 7 and set the robber to a different tile</div>
</td>
</tr>
<tr id="i24" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../network/Client.html#sendStartMatch--">sendStartMatch</a></span>()</code>
<div class="block">sends start match request</div>
</td>
</tr>
<tr id="i25" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../network/Client.html#sendSuccessfullTrade-int-int-">sendSuccessfullTrade</a></span>(int&nbsp;tradeID,
                    int&nbsp;tradePartnerID)</code>
<div class="block">When the client chose with whom he wants to trade</div>
</td>
</tr>
<tr id="i26" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../network/Client.html#sendText-java.lang.String-">sendText</a></span>(java.lang.String&nbsp;text)</code>
<div class="block">Sends message Server</div>
</td>
</tr>
<tr id="i27" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../network/Client.html#sendTradeOffer-int:A-int:A-">sendTradeOffer</a></span>(int[]&nbsp;offer,
              int[]&nbsp;demand)</code>
<div class="block">When the client wants to trade with the other players</div>
</td>
</tr>
<tr id="i28" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../network/Client.html#sendYearOfPlenty-java.util.ArrayList-">sendYearOfPlenty</a></span>(java.util.ArrayList&lt;<a href="../model/ResourceType.html" title="enum in model">ResourceType</a>&gt;&nbsp;res)</code>
<div class="block">Sends Year of plenty card played</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="methods.inherited.from.class.java.lang.Thread">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.Thread</h3>
<code>activeCount, checkAccess, countStackFrames, currentThread, destroy, dumpStack, enumerate, getAllStackTraces, getContextClassLoader, getDefaultUncaughtExceptionHandler, getId, getName, getPriority, getStackTrace, getState, getThreadGroup, getUncaughtExceptionHandler, holdsLock, interrupt, interrupted, isAlive, isDaemon, isInterrupted, join, join, join, resume, setContextClassLoader, setDaemon, setDefaultUncaughtExceptionHandler, setName, setPriority, setUncaughtExceptionHandler, sleep, sleep, start, stop, stop, suspend, toString, yield</code></li>
</ul>
<ul class="blockList">
<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
<code>equals, getClass, hashCode, notify, notifyAll, wait, wait, wait</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor.detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a name="Client-java.lang.String-int-game.GameManager-">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>Client</h4>
<pre>public&nbsp;Client(java.lang.String&nbsp;host,
              int&nbsp;port,
              <a href="../game/GameManager.html" title="class in game">GameManager</a>&nbsp;gameManager)
       throws java.lang.Exception</pre>
<div class="block">Creates new Client</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>host</code> - IP-Adress of Host</dd>
<dd><code>port</code> - Port</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>java.lang.Exception</code></dd>
</dl>
</li>
</ul>
</li>
</ul>
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method.detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="sendText-java.lang.String-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>sendText</h4>
<pre>public&nbsp;void&nbsp;sendText(java.lang.String&nbsp;text)</pre>
<div class="block">Sends message Server</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>text</code> - Message</dd>
</dl>
</li>
</ul>
<a name="receive--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>receive</h4>
<pre>public&nbsp;void&nbsp;receive()</pre>
<div class="block">Receives messages from Server</div>
</li>
</ul>
<a name="handleInput-java.lang.String-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>handleInput</h4>
<pre>public&nbsp;void&nbsp;handleInput(java.lang.String&nbsp;text)</pre>
<div class="block">Handles the JSON text input and handles which message is send by the server</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>text</code> - input by the server</dd>
</dl>
</li>
</ul>
<a name="run--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>run</h4>
<pre>public&nbsp;void&nbsp;run()</pre>
<div class="block">Run-Method of Client Thread</div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code>run</code>&nbsp;in interface&nbsp;<code>java.lang.Runnable</code></dd>
<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
<dd><code>run</code>&nbsp;in class&nbsp;<code>java.lang.Thread</code></dd>
</dl>
</li>
</ul>
<a name="sendEndTurn--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>sendEndTurn</h4>
<pre>public&nbsp;void&nbsp;sendEndTurn()</pre>
<div class="block">sends end turn message to the server</div>
</li>
</ul>
<a name="sendRollDice--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>sendRollDice</h4>
<pre>public&nbsp;void&nbsp;sendRollDice()</pre>
<div class="block">sends roll dice request</div>
</li>
</ul>
<a name="sendStartMatch--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>sendStartMatch</h4>
<pre>public&nbsp;void&nbsp;sendStartMatch()</pre>
<div class="block">sends start match request</div>
</li>
</ul>
<a name="sendChat-java.lang.String-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>sendChat</h4>
<pre>public&nbsp;void&nbsp;sendChat(java.lang.String&nbsp;text)</pre>
<div class="block">sends text for the chat</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>text</code> - </dd>
</dl>
</li>
</ul>
<a name="sendHello--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>sendHello</h4>
<pre>public&nbsp;void&nbsp;sendHello()</pre>
<div class="block">sends server handshake</div>
</li>
</ul>
<a name="sendPlayerInit-java.lang.String-java.lang.String-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>sendPlayerInit</h4>
<pre>public&nbsp;void&nbsp;sendPlayerInit(java.lang.String&nbsp;name,
                           java.lang.String&nbsp;color)</pre>
<div class="block">sends player initialize message</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>name</code> - name of the player</dd>
<dd><code>color</code> - color of the player</dd>
</dl>
</li>
</ul>
<a name="sendConstructSettlement-model.Vertex-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>sendConstructSettlement</h4>
<pre>public&nbsp;void&nbsp;sendConstructSettlement(<a href="../model/Vertex.html" title="class in model">Vertex</a>&nbsp;target)</pre>
<div class="block">sends construct settlement request</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>target</code> - location of the settlment</dd>
</dl>
</li>
</ul>
<a name="sendConstructCity-model.Vertex-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>sendConstructCity</h4>
<pre>public&nbsp;void&nbsp;sendConstructCity(<a href="../model/Vertex.html" title="class in model">Vertex</a>&nbsp;target)</pre>
<div class="block">sends construct city request</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>target</code> - location of the city</dd>
</dl>
</li>
</ul>
<a name="sendConstructRoad-model.Edge-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>sendConstructRoad</h4>
<pre>public&nbsp;void&nbsp;sendConstructRoad(<a href="../model/Edge.html" title="class in model">Edge</a>&nbsp;target)</pre>
<div class="block">sends construct road request</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>target</code> - location of the road</dd>
</dl>
</li>
</ul>
<a name="sendSetRobber-model.Tile-int-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>sendSetRobber</h4>
<pre>public&nbsp;void&nbsp;sendSetRobber(<a href="../model/Tile.html" title="class in model">Tile</a>&nbsp;tile,
                          int&nbsp;robbedPlayer)</pre>
<div class="block">When you rolled a 7 and set the robber to a different tile</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>tile</code> - </dd>
<dd><code>robbedPlayer</code> - </dd>
</dl>
</li>
</ul>
<a name="sendMaritimeTrade-int:A-int:A-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>sendMaritimeTrade</h4>
<pre>public&nbsp;void&nbsp;sendMaritimeTrade(int[]&nbsp;offer,
                              int[]&nbsp;demand)</pre>
<div class="block">When the client handles with the harbor</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>offer</code> - offered resources</dd>
<dd><code>demand</code> - demanded resources</dd>
</dl>
</li>
</ul>
<a name="sendTradeOffer-int:A-int:A-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>sendTradeOffer</h4>
<pre>public&nbsp;void&nbsp;sendTradeOffer(int[]&nbsp;offer,
                           int[]&nbsp;demand)</pre>
<div class="block">When the client wants to trade with the other players</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>offer</code> - offered resources</dd>
<dd><code>demand</code> - demanded resources</dd>
</dl>
</li>
</ul>
<a name="sendAcceptTrade-int-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>sendAcceptTrade</h4>
<pre>public&nbsp;void&nbsp;sendAcceptTrade(int&nbsp;tradeID)</pre>
<div class="block">When the client accepts the trade</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>tradeID</code> - </dd>
</dl>
</li>
</ul>
<a name="sendNotAcceptTrade-int-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>sendNotAcceptTrade</h4>
<pre>public&nbsp;void&nbsp;sendNotAcceptTrade(int&nbsp;tradeID)</pre>
<div class="block">When the client doesn't accept the trade</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>tradeID</code> - </dd>
</dl>
</li>
</ul>
<a name="sendSuccessfullTrade-int-int-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>sendSuccessfullTrade</h4>
<pre>public&nbsp;void&nbsp;sendSuccessfullTrade(int&nbsp;tradeID,
                                 int&nbsp;tradePartnerID)</pre>
<div class="block">When the client chose with whom he wants to trade</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>tradeID</code> - </dd>
<dd><code>tradePartnerID</code> - </dd>
</dl>
</li>
</ul>
<a name="sendCancelTrade-int-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>sendCancelTrade</h4>
<pre>public&nbsp;void&nbsp;sendCancelTrade(int&nbsp;tradeID)</pre>
<div class="block">When the client wants to cancel the trade</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>tradeID</code> - </dd>
</dl>
</li>
</ul>
<a name="sendGiveCards-int-int-int-int-int-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>sendGiveCards</h4>
<pre>public&nbsp;void&nbsp;sendGiveCards(int&nbsp;lumber,
                          int&nbsp;brick,
                          int&nbsp;wool,
                          int&nbsp;grain,
                          int&nbsp;ore)</pre>
<div class="block">When the client has to pay resources for example by the robber</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>lumber</code> - count of lumber to give away</dd>
<dd><code>brick</code> - count of brick to give away</dd>
<dd><code>wool</code> - count of wool to give away</dd>
<dd><code>grain</code> - count of grain to give away</dd>
<dd><code>ore</code> - count of ore to give away</dd>
</dl>
</li>
</ul>
<a name="sendBuyDevelopmentCard--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>sendBuyDevelopmentCard</h4>
<pre>public&nbsp;void&nbsp;sendBuyDevelopmentCard()</pre>
<div class="block">Sends request to buy a development card</div>
</li>
</ul>
<a name="sendPlayKnight-model.Tile-int-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>sendPlayKnight</h4>
<pre>public&nbsp;void&nbsp;sendPlayKnight(<a href="../model/Tile.html" title="class in model">Tile</a>&nbsp;targetTile,
                           int&nbsp;targetId)</pre>
<div class="block">sends Play knight event</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>targetTile</code> - </dd>
<dd><code>targetId</code> - </dd>
</dl>
</li>
</ul>
<a name="sendMonopoly-model.ResourceType-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>sendMonopoly</h4>
<pre>public&nbsp;void&nbsp;sendMonopoly(<a href="../model/ResourceType.html" title="enum in model">ResourceType</a>&nbsp;res)</pre>
<div class="block">Sends Monopoly played</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>res</code> - </dd>
</dl>
</li>
</ul>
<a name="sendYearOfPlenty-java.util.ArrayList-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>sendYearOfPlenty</h4>
<pre>public&nbsp;void&nbsp;sendYearOfPlenty(java.util.ArrayList&lt;<a href="../model/ResourceType.html" title="enum in model">ResourceType</a>&gt;&nbsp;res)</pre>
<div class="block">Sends Year of plenty card played</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>res</code> - </dd>
</dl>
</li>
</ul>
<a name="sendRoadBuilding-model.Edge-model.Edge-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>sendRoadBuilding</h4>
<pre>public&nbsp;void&nbsp;sendRoadBuilding(<a href="../model/Edge.html" title="class in model">Edge</a>&nbsp;roadOne,
                             <a href="../model/Edge.html" title="class in model">Edge</a>&nbsp;roadTwo)</pre>
<div class="block">Sends Road Building card played</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>roadOne</code> - </dd>
<dd><code>roadTwo</code> - </dd>
</dl>
</li>
</ul>
<a name="sendRoadBuilding-model.Edge-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>sendRoadBuilding</h4>
<pre>public&nbsp;void&nbsp;sendRoadBuilding(<a href="../model/Edge.html" title="class in model">Edge</a>&nbsp;road)</pre>
<div class="block">Sends Road Building card played</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>road</code> - </dd>
</dl>
</li>
</ul>
<a name="isBotClient--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isBotClient</h4>
<pre>public&nbsp;boolean&nbsp;isBotClient()</pre>
<div class="block">add Bots</div>
</li>
</ul>
<a name="getClientId--">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>getClientId</h4>
<pre>public&nbsp;int&nbsp;getClientId()</pre>
<div class="block">Getter for ClientId</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
</dl>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar.bottom">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.bottom.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/Client.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-files/index-1.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../network/BotClient.html" title="class in network"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
<li><a href="../network/ClientQueueHandler.html" title="class in network"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?network/Client.html" target="_top">Frames</a></li>
<li><a href="Client.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li><a href="#nested.classes.inherited.from.class.java.lang.Thread">Nested</a>&nbsp;|&nbsp;</li>
<li><a href="#fields.inherited.from.class.java.lang.Thread">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a name="skip.navbar.bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</body>
</html>
