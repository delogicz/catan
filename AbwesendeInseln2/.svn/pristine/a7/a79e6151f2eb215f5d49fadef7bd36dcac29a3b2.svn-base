package view;

import game.Settings;
import javafx.application.Platform;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.CheckBox;
import javafx.scene.control.Labeled;
import javafx.scene.control.RadioButton;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.StackPane;
import javafx.scene.paint.Color;
import javafx.scene.text.Font;
import javafx.stage.Stage;
import model.Catan;
import model.DevelopmentCard;
import model.DevelopmentCardType;
import model.Player;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import model.DevelopmentCard;


/**
 * 
 * @author Lena Sonnleitner, Samantha Meindl
 *
 */

public class DevelopmentCardSkin extends GridPane{
	
	private Catan catan;
	private Stage devCardStage;
	private Scene devCardScene;
	private GridPane overviewGridPane;
	
	private Button cancelButton, playButton;
	
	
	
	public DevelopmentCardSkin(DevelopmentCard devcard, Catan catan){
		super();
		
		this.catan = catan;
		Platform.runLater(new Runnable() {
			@Override
			public void run() {
				devCardStage = new Stage();
				devCardStage.setTitle("Your Development Cards: ");
				devCardStage.setResizable(false);
				devCardStage.initOwner(catan.getGameManager().getApp().getStage());
				
				overviewGridPane = new GridPane();
				
				createNewScene();
				
				setDevelopmentCardStageScene(devCardScene);

				
				
			}


		});
		try {
			Thread.sleep(10);
			
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	
		
		
		this.setVgap(8);
		this.setHgap(15);
		this.setPrefSize(300, 100);
		
		Button playButton = new Button("Play DevelopementCard");
		playButton.setDisable(true);
		this.add(playButton, 2, 3);
		
		Button cancelButton = new Button("Cancel");
		changeFont(cancelButton, false);
		this.add(cancelButton, 1, 3);

		

			
			
		
		

		
		
	}
	
	
	public void showDevCards(){
		//Alle zeigen verblasst
		
		
		
		// zeigen stark die wir haben
		for(int i = 0; i< player.getDevCards().size(); i++) {
			switch(player.getDevCardType().get(i)) {
				case CHAPEL :  ;
				case GREATHALL : ;
				case KNIGHT : ;
				case LIBRARY : ;
				case MARKET : ;
				case MONOPOLY : ;
				case ROADBUILDING : ;
				case UNIVERSITY : 
				case YEAROFPLENTY : ;
					
			}
			
			
			
		}
		
	}
	
	/**
	 * changes font of a labeled object									
	 * 		 
	 * @param labeled
	 * @param changeColor
	 */
		private void changeFont(Labeled labeled, boolean changeColor){
			if(changeColor) labeled.setTextFill(Color.ANTIQUEWHITE);
			labeled.setFont(Font.loadFont(Settings.OSWALD_PATH, Settings.STANDARD_FONT_SIZE));
		}
		
		public void showDevelopmentCardOptionsStage(){
			setDevelopmentCardStageScene(devCardScene);
			this.devCardStage.show();
		}
		
		private void setDevelopmentCardStageScene() {
			devCardStage.setScene(scene);
		}
		
		private void createNewScene() {
			StackPane stackPane = new StackPane();
			GridPane gridPane = new GridPane();
			
			ImageView backgroundDev = new ImageView(new Image(DevelopmentCardSkin.class.getResourceAsStream(" "), 300, 300, false, false));
			stackPane.getChildren().add(backgroundDev);
			
			addElements(gridPane);
			stackPane.getChildren().add(gridPane);
			
			addButtonEventHandler();
			
			this.devCardScene = new Scene( stackPane, 300, 300);
			
			
			
			
			
		}


		private void addElements(GridPane gridPane) {
			// TODO Auto-generated method stub
			RadioButton chapel = new RadioButton();
			chapel.setSelected(false);
			if(chapel.isSelected()){
				playButton.setDisable(false);
			}
			
			RadioButton greathall = new RadioButton();
			greathall.setSelected(false);
			if(greathall.isSelected()){
				playButton.setDisable(false);
			}
			
			
			RadioButton knight = new RadioButton();
			knight.setSelected(false);
			if(knight.isSelected()){
				playButton.setDisable(false);
			}
			
			
			RadioButton library = new RadioButton();
			library.setSelected(false);
			if(library.isSelected()){
				playButton.setDisable(false);
			}
			
			RadioButton market = new RadioButton();
			market.setSelected(false);
			if(market.isSelected()){
				playButton.setDisable(false);
			}
			
			RadioButton monopoly = new RadioButton();
			monopoly.setSelected(false);
			if(monopoly.isSelected()){
				playButton.setDisable(false);
			}
			
			RadioButton roadbuilding = new RadioButton();
			roadbuilding.setSelected(false);
			if(roadbuilding.isSelected()){
				playButton.setDisable(false);
			}
			
			RadioButton university = new RadioButton();
			university.setSelected(false);
			if(university.isSelected()){
				playButton.setDisable(false);
			}
			
			RadioButton yearofplenty = new RadioButton();
			yearofplenty.setSelected(false);
			if(yearofplenty.isSelected()){
				playButton.setDisable(false);
			}
			
			
		}


		private void addButtonEventHandler() {
			cancelButton.setOnAction(new EventHandler<ActionEvent>() {

				@Override
				public void handle(ActionEvent event) {
					devCardStage.close();
				}
			});
			
			
			playButton.setOnAction(new EventHandler<ActionEvent>() {

				@Override
				public void handle(ActionEvent event) {
					//TODO Karte ausspielen methode in model
					//playDevCard(); 
				}
			});
		
			
			
		}
}
