package controller;

import game.GameManager;
import javafx.event.EventHandler;
import javafx.scene.control.Button;
import javafx.scene.input.MouseEvent;
import model.*;
import view.GameControlSkin;

public class GameControl {
	private Catan catan;
	private GameControlSkin skin;
	
	public GameControl(Catan catan){
		
		this.catan =catan;
		skin = new GameControlSkin(this);
		enableBuildSetButton();
		enableBuildRoadButton();
		enableEndTurnButton();
		disableRollDiceButton();	
			
	}


	public void updateHand() {
		skin.getRoad().setTextFill(catan.getCurrentTurnTaker().getPlayerColor().getColor());
		skin.getCity().setTextFill(catan.getCurrentTurnTaker().getPlayerColor().getColor());
		skin.getSettlement().setTextFill(catan.getCurrentTurnTaker().getPlayerColor().getColor());
		skin.getLumber().setTextFill(catan.getCurrentTurnTaker().getPlayerColor().getColor());
		skin.getBrick().setTextFill(catan.getCurrentTurnTaker().getPlayerColor().getColor());
		skin.getWool().setTextFill(catan.getCurrentTurnTaker().getPlayerColor().getColor());
		skin.getGrain().setTextFill(catan.getCurrentTurnTaker().getPlayerColor().getColor());
		skin.getOre().setTextFill(catan.getCurrentTurnTaker().getPlayerColor().getColor());
		skin.getRoad().setText("Roads: " + catan.getCurrentTurnTaker().countRoads());
		skin.getCity().setText("Cities: " + catan.getCurrentTurnTaker().countCity());
		skin.getSettlement().setText("Settlements: " + catan.getCurrentTurnTaker().countSettlements());
		skin.getLumber().setText("Lumber: " + catan.getCurrentTurnTaker().getPlayerCards().getLumberCount());
		skin.getBrick().setText("Brick: " + catan.getCurrentTurnTaker().getPlayerCards().getBrickCount());
		skin.getWool().setText("Wool: " + catan.getCurrentTurnTaker().getPlayerCards().getWoolCount());
		skin.getGrain().setText("Grain: " + catan.getCurrentTurnTaker().getPlayerCards().getGrainCount());
		skin.getOre().setText("Ore: " + catan.getCurrentTurnTaker().getPlayerCards().getOreCount());
		skin.getPlayer().setText("|  " + catan.getCurrentTurnTaker().getName());
	}
	
	public final EventHandler<MouseEvent> buildSettlementHandler = new EventHandler<MouseEvent>() {
		@Override
		public void handle(MouseEvent mouseEvent) {
			
			catan.getCurrentTurnTaker().setBuildSettlementPressed(true);
			
		}
	};
	public final EventHandler<MouseEvent> buildRoadHandler = new EventHandler<MouseEvent>() {
		@Override
		public void handle(MouseEvent mouseEvent) {
			
			catan.getCurrentTurnTaker().setBuildRoadPressed(true);
			
		}
	};
	public final EventHandler<MouseEvent> buildCityHandler = new EventHandler<MouseEvent>() {
		@Override
		public void handle(MouseEvent mouseEvent) {
			
			catan.getCurrentTurnTaker().setBuildCityPressed(true);
			
		}
	};
	public final EventHandler<MouseEvent> endTurnHandler = new EventHandler<MouseEvent>() {
		@Override
		public void handle(MouseEvent mouseEvent) {
			
			catan.getCurrentTurnTaker().endingTurn();
			catan.changeTurn();
			updateHand();
			
		}
	};
	public final EventHandler<MouseEvent> rollDiceHandler = new EventHandler<MouseEvent>() {
		@Override
		public void handle(MouseEvent mouseEvent) {
			catan.dice(catan.getCurrentTurnTaker());
			updateHand();
			disableRollDiceButton();
			enableBuildRoadButton();
			enableBuildSetButton();
			enableEndTurnButton();
		}
	};
	private void enableEndTurnButton() {
		Button endTurnButton = skin.getEndTurnButton();
		endTurnButton.setDisable(false);
		endTurnButton.addEventHandler(MouseEvent.MOUSE_CLICKED, endTurnHandler);
		
	}

	public void enableBuildSetButton() {
		Button buildSetButton = skin.getBuildSetButton();
		buildSetButton.setDisable(false);
		buildSetButton.addEventHandler(MouseEvent.MOUSE_CLICKED, buildSettlementHandler);
		
	}
	public void disableBuildSetButton() {
		Button buildSetButton = skin.getBuildSetButton();
		catan.getCurrentTurnTaker().setBuildSettlementPressed(false);
		buildSetButton.setDisable(true);
		
		
	}
	public void enableBuildRoadButton() {
		Button buildRoadButton = skin.getBuildRoadButton();
		buildRoadButton.setDisable(false);
		buildRoadButton.addEventHandler(MouseEvent.MOUSE_CLICKED, buildRoadHandler);
		
	}
	public void disableBuildRoadButton() {
		Button buildRoadButton = skin.getBuildRoadButton();
		catan.getCurrentTurnTaker().setBuildRoadPressed(false);
		buildRoadButton.setDisable(true);
		
	}
	public void enableBuildCityButton() {
		Button buildCityButton = skin.getBuildCityButton();
		buildCityButton.setDisable(false);
		buildCityButton.addEventHandler(MouseEvent.MOUSE_CLICKED, buildCityHandler);
		
	}
	private void disableBuildCityButton() {
		Button buildCityButton = skin.getBuildCityButton();
		catan.getCurrentTurnTaker().setBuildCityPressed(false);
		buildCityButton.setDisable(true);
		
	}
	public void enableRollDiceButton() {
		Button RollDiceButton = skin.getRollDiceButton();
		RollDiceButton.setDisable(false);
		RollDiceButton.addEventHandler(MouseEvent.MOUSE_CLICKED, rollDiceHandler);
		
	}
	public void disableRollDiceButton() {
		Button RollDiceButton = skin.getRollDiceButton();
		RollDiceButton.setDisable(true);
		
	}
	public void disableEndTurnButton() {
		Button EndTurnButton = skin.getEndTurnButton();
		EndTurnButton.setDisable(true);
	}

	public GameControlSkin getSkin() {
		return skin;
	}

	/**
	 * @return the catan
	 */
	public Catan getCatan() {
		return catan;
	}

	

	
	
}