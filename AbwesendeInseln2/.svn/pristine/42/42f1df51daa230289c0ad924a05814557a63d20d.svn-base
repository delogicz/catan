<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (1.8.0_92) on Mon Jan 29 02:20:24 CET 2018 -->
<title>PlayerClient</title>
<meta name="date" content="2018-01-29">
<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
<script type="text/javascript" src="../script.js"></script>
</head>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="PlayerClient";
        }
    }
    catch(err) {
    }
//-->
var methods = {"i0":10,"i1":10,"i2":10,"i3":10,"i4":10,"i5":10,"i6":10,"i7":10,"i8":10,"i9":10,"i10":10,"i11":10,"i12":10,"i13":10,"i14":10,"i15":10,"i16":10,"i17":10,"i18":10,"i19":10,"i20":10,"i21":10,"i22":10,"i23":10,"i24":10,"i25":10,"i26":10,"i27":10,"i28":10,"i29":10,"i30":10,"i31":10,"i32":10,"i33":10,"i34":10,"i35":10,"i36":10,"i37":10,"i38":10,"i39":10,"i40":10,"i41":10,"i42":10,"i43":10,"i44":10,"i45":10,"i46":10,"i47":10,"i48":10,"i49":10,"i50":10,"i51":10,"i52":10,"i53":10,"i54":10,"i55":10,"i56":10,"i57":10,"i58":10,"i59":10};
var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
var altColor = "altColor";
var rowColor = "rowColor";
var tableTab = "tableTab";
var activeTableTab = "activeTableTab";
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/PlayerClient.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-files/index-1.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../model/Player.html" title="class in model"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
<li><a href="../model/PlayerColor.html" title="enum in model"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?model/PlayerClient.html" target="_top">Frames</a></li>
<li><a href="PlayerClient.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a name="skip.navbar.top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle">model</div>
<h2 title="Class PlayerClient" class="title">Class PlayerClient</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li>java.lang.Object</li>
<li>
<ul class="inheritance">
<li><a href="../model/Player.html" title="class in model">model.Player</a></li>
<li>
<ul class="inheritance">
<li>model.PlayerClient</li>
</ul>
</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<dl>
<dt>Direct Known Subclasses:</dt>
<dd><a href="../bot/Bot.html" title="class in bot">Bot</a></dd>
</dl>
<hr>
<br>
<pre>public class <span class="typeNameLabel">PlayerClient</span>
extends <a href="../model/Player.html" title="class in model">Player</a></pre>
<div class="block">Describes a participant in the game. Stores his current state (victoryPoints, resCards, etc.).</div>
<dl>
<dt><span class="simpleTagLabel">Author:</span></dt>
<dd>Daniel Panangian, Stefanie Kloss, Lena Sonnleitner</dd>
</dl>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor.summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colOne" scope="col">Constructor and Description</th>
</tr>
<tr class="altColor">
<td class="colOne"><code><span class="memberNameLink"><a href="../model/PlayerClient.html#PlayerClient-model.PlayerColor-int-java.lang.String-">PlayerClient</a></span>(<a href="../model/PlayerColor.html" title="enum in model">PlayerColor</a>&nbsp;playerColor,
            int&nbsp;playerId,
            java.lang.String&nbsp;name)</code>
<div class="block">Constructor</div>
</td>
</tr>
<tr class="rowColor">
<td class="colOne"><code><span class="memberNameLink"><a href="../model/PlayerClient.html#PlayerClient-model.PlayerColor-int-java.lang.String-java.lang.String-">PlayerClient</a></span>(<a href="../model/PlayerColor.html" title="enum in model">PlayerColor</a>&nbsp;playerColor,
            int&nbsp;playerId,
            java.lang.String&nbsp;name,
            java.lang.String&nbsp;status)</code>&nbsp;</td>
</tr>
</table>
</li>
</ul>
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method.summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr id="i0" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/PlayerClient.html#addAndCheckKnightCount--">addAndCheckKnightCount</a></span>()</code>
<div class="block">Adds 1 to the knightCount and checks for the largest army</div>
</td>
</tr>
<tr id="i1" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/PlayerClient.html#addAndCheckVictoryPoints-int-">addAndCheckVictoryPoints</a></span>(int&nbsp;pointsToBeAdded)</code>
<div class="block">Adds a certain amount of victoryPoints</div>
</td>
</tr>
<tr id="i2" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/PlayerClient.html#addTemporarilyRoadSkin-view.RoadSkin-">addTemporarilyRoadSkin</a></span>(<a href="../view/RoadSkin.html" title="class in view">RoadSkin</a>&nbsp;roadSkin)</code>
<div class="block">Adds black roadSkins to the list temporarilyRoadSkins 
 when the "roadbuilding"-DevelopmentCard is played
 Send the roadBuilding message to the server in case both roads are built</div>
</td>
</tr>
<tr id="i3" class="rowColor">
<td class="colFirst"><code><a href="../model/Road.html" title="class in model">Road</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/PlayerClient.html#build-model.Edge-boolean-">build</a></span>(<a href="../model/Edge.html" title="class in model">Edge</a>&nbsp;edge,
     boolean&nbsp;server)</code>
<div class="block">Builds a new road (handleConstruction)</div>
</td>
</tr>
<tr id="i4" class="altColor">
<td class="colFirst"><code><a href="../model/Building.html" title="class in model">Building</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/PlayerClient.html#build-java.lang.String-model.Vertex-boolean-">build</a></span>(java.lang.String&nbsp;typ,
     <a href="../model/Vertex.html" title="class in model">Vertex</a>&nbsp;vertex,
     boolean&nbsp;server)</code>
<div class="block">Builds a new settlement or city (handleConstruction)</div>
</td>
</tr>
<tr id="i5" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/PlayerClient.html#canBuildRoad-model.Edge-">canBuildRoad</a></span>(<a href="../model/Edge.html" title="class in model">Edge</a>&nbsp;edge)</code>
<div class="block">check if the rules for building a road is fulfilled
 Rules:
 One of two vertices of the edge must consist a building (road or settlement or city) and 
 the building must belong to the player</div>
</td>
</tr>
<tr id="i6" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/PlayerClient.html#canBuildSettlement-model.Vertex-">canBuildSettlement</a></span>(<a href="../model/Vertex.html" title="class in model">Vertex</a>&nbsp;vertex)</code>
<div class="block">check if the rules for building a settlement is fulfilled
 Rules:
 First building phase:
 a settlement must built within two space of another city or settlement
 Next turn: 
 a settlement must be built within two space of another city or settlement and must be built on an 
 end of a player's road</div>
</td>
</tr>
<tr id="i7" class="rowColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/PlayerClient.html#countCity--">countCity</a></span>()</code>
<div class="block">Counts of city</div>
</td>
</tr>
<tr id="i8" class="altColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/PlayerClient.html#countRoads--">countRoads</a></span>()</code>
<div class="block">Counts of Roads</div>
</td>
</tr>
<tr id="i9" class="rowColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/PlayerClient.html#countSettlements--">countSettlements</a></span>()</code>
<div class="block">Count of settlments</div>
</td>
</tr>
<tr id="i10" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/PlayerClient.html#createPlayerControl--">createPlayerControl</a></span>()</code>&nbsp;</td>
</tr>
<tr id="i11" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/PlayerClient.html#discardCard--">discardCard</a></span>()</code>
<div class="block">Abstract method discardCard for bot</div>
</td>
</tr>
<tr id="i12" class="altColor">
<td class="colFirst"><code>java.util.ArrayList&lt;<a href="../model/Edge.html" title="class in model">Edge</a>&gt;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/PlayerClient.html#getBuildableEdges--">getBuildableEdges</a></span>()</code>
<div class="block">Gets the edges the player can build roads on</div>
</td>
</tr>
<tr id="i13" class="rowColor">
<td class="colFirst"><code>java.util.ArrayList&lt;<a href="../model/Vertex.html" title="class in model">Vertex</a>&gt;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/PlayerClient.html#getBuildableVertices--">getBuildableVertices</a></span>()</code>
<div class="block">Gets the vertices the player can build settlements on</div>
</td>
</tr>
<tr id="i14" class="altColor">
<td class="colFirst"><code>java.util.ArrayList&lt;<a href="../model/City.html" title="class in model">City</a>&gt;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/PlayerClient.html#getCities--">getCities</a></span>()</code>&nbsp;</td>
</tr>
<tr id="i15" class="rowColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/PlayerClient.html#getCitiesLeft--">getCitiesLeft</a></span>()</code>&nbsp;</td>
</tr>
<tr id="i16" class="altColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/PlayerClient.html#getDevCardCount--">getDevCardCount</a></span>()</code>
<div class="block">Gets the amount of cards the player owns</div>
</td>
</tr>
<tr id="i17" class="rowColor">
<td class="colFirst"><code>java.util.ArrayList&lt;<a href="../model/DevelopmentCardType.html" title="enum in model">DevelopmentCardType</a>&gt;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/PlayerClient.html#getDevCards--">getDevCards</a></span>()</code>&nbsp;</td>
</tr>
<tr id="i18" class="altColor">
<td class="colFirst"><code>java.util.ArrayList&lt;<a href="../model/DevelopmentCardType.html" title="enum in model">DevelopmentCardType</a>&gt;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/PlayerClient.html#getDevCardsNext--">getDevCardsNext</a></span>()</code>&nbsp;</td>
</tr>
<tr id="i19" class="rowColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/PlayerClient.html#getDevVictoryPoints--">getDevVictoryPoints</a></span>()</code>&nbsp;</td>
</tr>
<tr id="i20" class="altColor">
<td class="colFirst"><code><a href="../model/Hand.html" title="class in model">Hand</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/PlayerClient.html#getHand--">getHand</a></span>()</code>
<div class="block">get player's Hand</div>
</td>
</tr>
<tr id="i21" class="rowColor">
<td class="colFirst"><code>java.util.ArrayList&lt;<a href="../model/Harbour.html" title="enum in model">Harbour</a>&gt;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/PlayerClient.html#getHarbours--">getHarbours</a></span>()</code>
<div class="block">Getter for harbours</div>
</td>
</tr>
<tr id="i22" class="altColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/PlayerClient.html#getKnightCount--">getKnightCount</a></span>()</code>
<div class="block">get knight count</div>
</td>
</tr>
<tr id="i23" class="rowColor">
<td class="colFirst"><code>int[]</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/PlayerClient.html#getMaritimePrices-model.ResourceType-">getMaritimePrices</a></span>(<a href="../model/ResourceType.html" title="enum in model">ResourceType</a>&nbsp;request)</code>
<div class="block">Returns the amount of each ResourceType needed to trade 1 of the requested ResourceType</div>
</td>
</tr>
<tr id="i24" class="altColor">
<td class="colFirst"><code><a href="../controller/PlayerControl.html" title="class in controller">PlayerControl</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/PlayerClient.html#getPlayerControl--">getPlayerControl</a></span>()</code>&nbsp;</td>
</tr>
<tr id="i25" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/PlayerClient.html#getRelocateRobber--">getRelocateRobber</a></span>()</code>&nbsp;</td>
</tr>
<tr id="i26" class="altColor">
<td class="colFirst"><code>java.util.ArrayList&lt;<a href="../model/ResourceType.html" title="enum in model">ResourceType</a>&gt;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/PlayerClient.html#getResCards--">getResCards</a></span>()</code>&nbsp;</td>
</tr>
<tr id="i27" class="rowColor">
<td class="colFirst"><code>java.util.ArrayList&lt;<a href="../model/Road.html" title="class in model">Road</a>&gt;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/PlayerClient.html#getRoads--">getRoads</a></span>()</code>&nbsp;</td>
</tr>
<tr id="i28" class="altColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/PlayerClient.html#getRoadsLeft--">getRoadsLeft</a></span>()</code>&nbsp;</td>
</tr>
<tr id="i29" class="rowColor">
<td class="colFirst"><code>java.util.ArrayList&lt;<a href="../model/Settlement.html" title="class in model">Settlement</a>&gt;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/PlayerClient.html#getSettlements--">getSettlements</a></span>()</code>&nbsp;</td>
</tr>
<tr id="i30" class="altColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/PlayerClient.html#getSettlementsLeft--">getSettlementsLeft</a></span>()</code>&nbsp;</td>
</tr>
<tr id="i31" class="rowColor">
<td class="colFirst"><code>java.lang.String</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/PlayerClient.html#getStatusEnglish--">getStatusEnglish</a></span>()</code>
<div class="block">Gets the status in English</div>
</td>
</tr>
<tr id="i32" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/PlayerClient.html#isBuildCityPressed--">isBuildCityPressed</a></span>()</code>
<div class="block">Bool for buildCityPressed</div>
</td>
</tr>
<tr id="i33" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/PlayerClient.html#isBuildRoadPressed--">isBuildRoadPressed</a></span>()</code>
<div class="block">bool for buildRoadPressed</div>
</td>
</tr>
<tr id="i34" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/PlayerClient.html#isBuildSettlementPressed--">isBuildSettlementPressed</a></span>()</code>
<div class="block">Bool for buildSettlementPressed</div>
</td>
</tr>
<tr id="i35" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/PlayerClient.html#isCanPlayDevCard--">isCanPlayDevCard</a></span>()</code>&nbsp;</td>
</tr>
<tr id="i36" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/PlayerClient.html#isDiscardCards--">isDiscardCards</a></span>()</code>&nbsp;</td>
</tr>
<tr id="i37" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/PlayerClient.html#isReadyToStartGame--">isReadyToStartGame</a></span>()</code>&nbsp;</td>
</tr>
<tr id="i38" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/PlayerClient.html#isRoadBuilding--">isRoadBuilding</a></span>()</code>&nbsp;</td>
</tr>
<tr id="i39" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/PlayerClient.html#isShowDevCardPressed--">isShowDevCardPressed</a></span>()</code>
<div class="block">Bool for showDevCardPressed</div>
</td>
</tr>
<tr id="i40" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/PlayerClient.html#migrateDevCards--">migrateDevCards</a></span>()</code>
<div class="block">Moves DevCards from DevCardsNext to DevCards so they can be used</div>
</td>
</tr>
<tr id="i41" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/PlayerClient.html#migrateHarbours--">migrateHarbours</a></span>()</code>
<div class="block">Moves Harbours from HarboursNext to Harbours so they can be used</div>
</td>
</tr>
<tr id="i42" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/PlayerClient.html#playRoadBuildingDevCard-boolean-">playRoadBuildingDevCard</a></span>(boolean&nbsp;onlyOneRoad)</code>
<div class="block">For Client
 Handles the request to play a roadbuilding development card</div>
</td>
</tr>
<tr id="i43" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/PlayerClient.html#resCardsCosts-java.util.ArrayList-">resCardsCosts</a></span>(java.util.ArrayList&lt;<a href="../model/ResourceType.html" title="enum in model">ResourceType</a>&gt;&nbsp;costs)</code>
<div class="block">Use when PlayerClient has costs in form of resource cards</div>
</td>
</tr>
<tr id="i44" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/PlayerClient.html#resCardsProduce-java.util.ArrayList-">resCardsProduce</a></span>(java.util.ArrayList&lt;<a href="../model/ResourceType.html" title="enum in model">ResourceType</a>&gt;&nbsp;resources)</code>
<div class="block">Use when PlayerClient receives resource cards</div>
</td>
</tr>
<tr id="i45" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/PlayerClient.html#robbingVictim-model.Tile-java.util.ArrayList-">robbingVictim</a></span>(<a href="../model/Tile.html" title="class in model">Tile</a>&nbsp;tile,
             java.util.ArrayList&lt;<a href="../model/Player.html" title="class in model">Player</a>&gt;&nbsp;players)</code>
<div class="block">Call after player decided on which tile he wants to put the robber on</div>
</td>
</tr>
<tr id="i46" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/PlayerClient.html#setBuildCityPressed-boolean-">setBuildCityPressed</a></span>(boolean&nbsp;buildCityPressed)</code>
<div class="block">Setter for buildCityPressed</div>
</td>
</tr>
<tr id="i47" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/PlayerClient.html#setBuildRoadPressed-boolean-">setBuildRoadPressed</a></span>(boolean&nbsp;buildRoadPressed)</code>
<div class="block">Setter for buildRoadPressed</div>
</td>
</tr>
<tr id="i48" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/PlayerClient.html#setBuildSettlementPressed-boolean-">setBuildSettlementPressed</a></span>(boolean&nbsp;bool)</code>
<div class="block">Setter for buildSettlementPressed</div>
</td>
</tr>
<tr id="i49" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/PlayerClient.html#setCanPlayDevCard-boolean-">setCanPlayDevCard</a></span>(boolean&nbsp;canPlayDevCard)</code>&nbsp;</td>
</tr>
<tr id="i50" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/PlayerClient.html#setCurrentTurnTaker-model.Player-">setCurrentTurnTaker</a></span>(<a href="../model/Player.html" title="class in model">Player</a>&nbsp;player)</code>&nbsp;</td>
</tr>
<tr id="i51" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/PlayerClient.html#setDevVictoryPoints-int-">setDevVictoryPoints</a></span>(int&nbsp;devVictoryPoints)</code>
<div class="block">Sets the devVictoryPoints</div>
</td>
</tr>
<tr id="i52" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/PlayerClient.html#setDiscardCards-boolean-">setDiscardCards</a></span>(boolean&nbsp;discardCards)</code>&nbsp;</td>
</tr>
<tr id="i53" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/PlayerClient.html#setReadyToStartGame-boolean-">setReadyToStartGame</a></span>(boolean&nbsp;readyToStartGame)</code>&nbsp;</td>
</tr>
<tr id="i54" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/PlayerClient.html#setRelocateRobber-boolean-">setRelocateRobber</a></span>(boolean&nbsp;relocateRobber)</code>&nbsp;</td>
</tr>
<tr id="i55" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/PlayerClient.html#setResCards-java.util.ArrayList-">setResCards</a></span>(java.util.ArrayList&lt;<a href="../model/ResourceType.html" title="enum in model">ResourceType</a>&gt;&nbsp;resCards)</code>&nbsp;</td>
</tr>
<tr id="i56" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/PlayerClient.html#setRoadBuilding-boolean-">setRoadBuilding</a></span>(boolean&nbsp;roadBuilding)</code>
<div class="block">Sets the roadBuilding</div>
</td>
</tr>
<tr id="i57" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/PlayerClient.html#setShowDevCardPressed-boolean-">setShowDevCardPressed</a></span>(boolean&nbsp;showDevCardPressed)</code>
<div class="block">Setter for showDevCardPressed</div>
</td>
</tr>
<tr id="i58" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/PlayerClient.html#setStatus-java.lang.String-boolean-">setStatus</a></span>(java.lang.String&nbsp;status,
         boolean&nbsp;server)</code>&nbsp;</td>
</tr>
<tr id="i59" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/PlayerClient.html#update-int-java.lang.String-java.lang.String-model.PlayerColor-java.util.ArrayList-int-java.util.ArrayList-">update</a></span>(int&nbsp;victoryPoints,
      java.lang.String&nbsp;name,
      java.lang.String&nbsp;status,
      <a href="../model/PlayerColor.html" title="enum in model">PlayerColor</a>&nbsp;color,
      java.util.ArrayList&lt;<a href="../model/ResourceType.html" title="enum in model">ResourceType</a>&gt;&nbsp;resources,
      int&nbsp;knightCount,
      java.util.ArrayList&lt;<a href="../model/DevelopmentCardType.html" title="enum in model">DevelopmentCardType</a>&gt;&nbsp;developmentCards)</code>
<div class="block">Updates the information of the player</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="methods.inherited.from.class.model.Player">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;model.<a href="../model/Player.html" title="class in model">Player</a></h3>
<code><a href="../model/Player.html#activateBot--">activateBot</a>, <a href="../model/Player.html#addDevCard--">addDevCard</a>, <a href="../model/Player.html#getCatan--">getCatan</a>, <a href="../model/Player.html#getConnectedRoads--">getConnectedRoads</a>, <a href="../model/Player.html#getImgURL--">getImgURL</a>, <a href="../model/Player.html#getLrPath--">getLrPath</a>, <a href="../model/Player.html#getName--">getName</a>, <a href="../model/Player.html#getPlayerColor--">getPlayerColor</a>, <a href="../model/Player.html#getPlayerID--">getPlayerID</a>, <a href="../model/Player.html#getResCardsCount--">getResCardsCount</a>, <a href="../model/Player.html#getStatus--">getStatus</a>, <a href="../model/Player.html#getVictoryPoints--">getVictoryPoints</a>, <a href="../model/Player.html#isBot--">isBot</a>, <a href="../model/Player.html#removeDevCard--">removeDevCard</a>, <a href="../model/Player.html#resCardsCosts-int-">resCardsCosts</a>, <a href="../model/Player.html#resCardsCountProduce-int-">resCardsCountProduce</a>, <a href="../model/Player.html#setCatan-model.Catan-">setCatan</a>, <a href="../model/Player.html#setConnectedRoads-int-">setConnectedRoads</a>, <a href="../model/Player.html#setLrPath-java.util.ArrayList-">setLrPath</a>, <a href="../model/Player.html#setName-java.lang.String-">setName</a>, <a href="../model/Player.html#setPlayerColor-model.PlayerColor-">setPlayerColor</a>, <a href="../model/Player.html#setVictoryPoints-int-">setVictoryPoints</a>, <a href="../model/Player.html#update-int-java.lang.String-java.lang.String-model.PlayerColor-int-int-int-">update</a></code></li>
</ul>
<ul class="blockList">
<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
<code>equals, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor.detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a name="PlayerClient-model.PlayerColor-int-java.lang.String-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>PlayerClient</h4>
<pre>public&nbsp;PlayerClient(<a href="../model/PlayerColor.html" title="enum in model">PlayerColor</a>&nbsp;playerColor,
                    int&nbsp;playerId,
                    java.lang.String&nbsp;name)</pre>
<div class="block">Constructor</div>
</li>
</ul>
<a name="PlayerClient-model.PlayerColor-int-java.lang.String-java.lang.String-">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>PlayerClient</h4>
<pre>public&nbsp;PlayerClient(<a href="../model/PlayerColor.html" title="enum in model">PlayerColor</a>&nbsp;playerColor,
                    int&nbsp;playerId,
                    java.lang.String&nbsp;name,
                    java.lang.String&nbsp;status)</pre>
</li>
</ul>
</li>
</ul>
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method.detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="update-int-java.lang.String-java.lang.String-model.PlayerColor-java.util.ArrayList-int-java.util.ArrayList-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>update</h4>
<pre>public&nbsp;void&nbsp;update(int&nbsp;victoryPoints,
                   java.lang.String&nbsp;name,
                   java.lang.String&nbsp;status,
                   <a href="../model/PlayerColor.html" title="enum in model">PlayerColor</a>&nbsp;color,
                   java.util.ArrayList&lt;<a href="../model/ResourceType.html" title="enum in model">ResourceType</a>&gt;&nbsp;resources,
                   int&nbsp;knightCount,
                   java.util.ArrayList&lt;<a href="../model/DevelopmentCardType.html" title="enum in model">DevelopmentCardType</a>&gt;&nbsp;developmentCards)</pre>
<div class="block">Updates the information of the player</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>victoryPoints</code> - </dd>
<dd><code>name</code> - </dd>
<dd><code>status</code> - </dd>
<dd><code>color</code> - </dd>
<dd><code>resources</code> - </dd>
<dd><code>knightCount</code> - </dd>
<dd><code>developmentCards</code> - </dd>
</dl>
</li>
</ul>
<a name="build-java.lang.String-model.Vertex-boolean-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>build</h4>
<pre>public&nbsp;<a href="../model/Building.html" title="class in model">Building</a>&nbsp;build(java.lang.String&nbsp;typ,
                      <a href="../model/Vertex.html" title="class in model">Vertex</a>&nbsp;vertex,
                      boolean&nbsp;server)</pre>
<div class="block">Builds a new settlement or city (handleConstruction)</div>
<dl>
<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
<dd><code><a href="../model/Player.html#build-java.lang.String-model.Vertex-boolean-">build</a></code>&nbsp;in class&nbsp;<code><a href="../model/Player.html" title="class in model">Player</a></code></dd>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>typ</code> - type of the new building</dd>
<dd><code>vertex</code> - vertex on which the building is located</dd>
</dl>
</li>
</ul>
<a name="build-model.Edge-boolean-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>build</h4>
<pre>public&nbsp;<a href="../model/Road.html" title="class in model">Road</a>&nbsp;build(<a href="../model/Edge.html" title="class in model">Edge</a>&nbsp;edge,
                  boolean&nbsp;server)</pre>
<div class="block">Builds a new road (handleConstruction)</div>
<dl>
<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
<dd><code><a href="../model/Player.html#build-model.Edge-boolean-">build</a></code>&nbsp;in class&nbsp;<code><a href="../model/Player.html" title="class in model">Player</a></code></dd>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>edge</code> - edge on which the road is located</dd>
</dl>
</li>
</ul>
<a name="resCardsCosts-java.util.ArrayList-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>resCardsCosts</h4>
<pre>public&nbsp;void&nbsp;resCardsCosts(java.util.ArrayList&lt;<a href="../model/ResourceType.html" title="enum in model">ResourceType</a>&gt;&nbsp;costs)</pre>
<div class="block">Use when PlayerClient has costs in form of resource cards</div>
</li>
</ul>
<a name="resCardsProduce-java.util.ArrayList-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>resCardsProduce</h4>
<pre>public&nbsp;void&nbsp;resCardsProduce(java.util.ArrayList&lt;<a href="../model/ResourceType.html" title="enum in model">ResourceType</a>&gt;&nbsp;resources)</pre>
<div class="block">Use when PlayerClient receives resource cards</div>
</li>
</ul>
<a name="addAndCheckVictoryPoints-int-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>addAndCheckVictoryPoints</h4>
<pre>public&nbsp;boolean&nbsp;addAndCheckVictoryPoints(int&nbsp;pointsToBeAdded)</pre>
<div class="block">Adds a certain amount of victoryPoints</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>pointsToBeAdded</code> - </dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>true, if game is won</dd>
</dl>
</li>
</ul>
<a name="canBuildSettlement-model.Vertex-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>canBuildSettlement</h4>
<pre>public&nbsp;boolean&nbsp;canBuildSettlement(<a href="../model/Vertex.html" title="class in model">Vertex</a>&nbsp;vertex)</pre>
<div class="block">check if the rules for building a settlement is fulfilled
 Rules:
 First building phase:
 a settlement must built within two space of another city or settlement
 Next turn: 
 a settlement must be built within two space of another city or settlement and must be built on an 
 end of a player's road</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>vertex</code> - </dd>
</dl>
</li>
</ul>
<a name="canBuildRoad-model.Edge-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>canBuildRoad</h4>
<pre>public&nbsp;boolean&nbsp;canBuildRoad(<a href="../model/Edge.html" title="class in model">Edge</a>&nbsp;edge)</pre>
<div class="block">check if the rules for building a road is fulfilled
 Rules:
 One of two vertices of the edge must consist a building (road or settlement or city) and 
 the building must belong to the player</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>edge</code> - </dd>
</dl>
</li>
</ul>
<a name="robbingVictim-model.Tile-java.util.ArrayList-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>robbingVictim</h4>
<pre>public&nbsp;void&nbsp;robbingVictim(<a href="../model/Tile.html" title="class in model">Tile</a>&nbsp;tile,
                          java.util.ArrayList&lt;<a href="../model/Player.html" title="class in model">Player</a>&gt;&nbsp;players)</pre>
<div class="block">Call after player decided on which tile he wants to put the robber on</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>tile</code> - on which the robber will be</dd>
<dd><code>players</code> - that can be robbed from</dd>
</dl>
</li>
</ul>
<a name="migrateHarbours--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>migrateHarbours</h4>
<pre>public&nbsp;void&nbsp;migrateHarbours()</pre>
<div class="block">Moves Harbours from HarboursNext to Harbours so they can be used</div>
</li>
</ul>
<a name="migrateDevCards--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>migrateDevCards</h4>
<pre>public&nbsp;void&nbsp;migrateDevCards()</pre>
<div class="block">Moves DevCards from DevCardsNext to DevCards so they can be used</div>
</li>
</ul>
<a name="getMaritimePrices-model.ResourceType-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getMaritimePrices</h4>
<pre>public&nbsp;int[]&nbsp;getMaritimePrices(<a href="../model/ResourceType.html" title="enum in model">ResourceType</a>&nbsp;request)</pre>
<div class="block">Returns the amount of each ResourceType needed to trade 1 of the requested ResourceType</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>request</code> - Type the prices are for</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>int Array with prices in following order: Lumber,Brick,Wool,Grain,Ore</dd>
</dl>
</li>
</ul>
<a name="getDevCards--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getDevCards</h4>
<pre>public&nbsp;java.util.ArrayList&lt;<a href="../model/DevelopmentCardType.html" title="enum in model">DevelopmentCardType</a>&gt;&nbsp;getDevCards()</pre>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the devCards</dd>
</dl>
</li>
</ul>
<a name="getDevCardsNext--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getDevCardsNext</h4>
<pre>public&nbsp;java.util.ArrayList&lt;<a href="../model/DevelopmentCardType.html" title="enum in model">DevelopmentCardType</a>&gt;&nbsp;getDevCardsNext()</pre>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the devCardsNext</dd>
</dl>
</li>
</ul>
<a name="getRoadsLeft--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getRoadsLeft</h4>
<pre>public&nbsp;int&nbsp;getRoadsLeft()</pre>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the roads the player has left</dd>
</dl>
</li>
</ul>
<a name="getSettlementsLeft--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getSettlementsLeft</h4>
<pre>public&nbsp;int&nbsp;getSettlementsLeft()</pre>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the settlementsLeft</dd>
</dl>
</li>
</ul>
<a name="getCitiesLeft--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getCitiesLeft</h4>
<pre>public&nbsp;int&nbsp;getCitiesLeft()</pre>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the citiesLeft</dd>
</dl>
</li>
</ul>
<a name="setRelocateRobber-boolean-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setRelocateRobber</h4>
<pre>public&nbsp;void&nbsp;setRelocateRobber(boolean&nbsp;relocateRobber)</pre>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>relocateRobber</code> - the boolean relocateRobber to be set</dd>
</dl>
</li>
</ul>
<a name="setCurrentTurnTaker-model.Player-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setCurrentTurnTaker</h4>
<pre>public&nbsp;void&nbsp;setCurrentTurnTaker(<a href="../model/Player.html" title="class in model">Player</a>&nbsp;player)</pre>
</li>
</ul>
<a name="getRelocateRobber--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getRelocateRobber</h4>
<pre>public&nbsp;boolean&nbsp;getRelocateRobber()</pre>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the relocateRobber</dd>
</dl>
</li>
</ul>
<a name="isBuildSettlementPressed--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isBuildSettlementPressed</h4>
<pre>public&nbsp;boolean&nbsp;isBuildSettlementPressed()</pre>
<div class="block">Bool for buildSettlementPressed</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
</dl>
</li>
</ul>
<a name="setBuildSettlementPressed-boolean-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setBuildSettlementPressed</h4>
<pre>public&nbsp;void&nbsp;setBuildSettlementPressed(boolean&nbsp;bool)</pre>
<div class="block">Setter for buildSettlementPressed</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>bool</code> - </dd>
</dl>
</li>
</ul>
<a name="isBuildRoadPressed--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isBuildRoadPressed</h4>
<pre>public&nbsp;boolean&nbsp;isBuildRoadPressed()</pre>
<div class="block">bool for buildRoadPressed</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
</dl>
</li>
</ul>
<a name="setBuildRoadPressed-boolean-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setBuildRoadPressed</h4>
<pre>public&nbsp;void&nbsp;setBuildRoadPressed(boolean&nbsp;buildRoadPressed)</pre>
<div class="block">Setter for buildRoadPressed</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>buildRoadPressed</code> - </dd>
</dl>
</li>
</ul>
<a name="isBuildCityPressed--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isBuildCityPressed</h4>
<pre>public&nbsp;boolean&nbsp;isBuildCityPressed()</pre>
<div class="block">Bool for buildCityPressed</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
</dl>
</li>
</ul>
<a name="setBuildCityPressed-boolean-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setBuildCityPressed</h4>
<pre>public&nbsp;void&nbsp;setBuildCityPressed(boolean&nbsp;buildCityPressed)</pre>
<div class="block">Setter for buildCityPressed</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>buildCityPressed</code> - </dd>
</dl>
</li>
</ul>
<a name="isShowDevCardPressed--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isShowDevCardPressed</h4>
<pre>public&nbsp;boolean&nbsp;isShowDevCardPressed()</pre>
<div class="block">Bool for showDevCardPressed</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
</dl>
</li>
</ul>
<a name="setShowDevCardPressed-boolean-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setShowDevCardPressed</h4>
<pre>public&nbsp;void&nbsp;setShowDevCardPressed(boolean&nbsp;showDevCardPressed)</pre>
<div class="block">Setter for showDevCardPressed</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>showDevCardPressed</code> - </dd>
</dl>
</li>
</ul>
<a name="isReadyToStartGame--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isReadyToStartGame</h4>
<pre>public&nbsp;boolean&nbsp;isReadyToStartGame()</pre>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the readyToStartGame</dd>
</dl>
</li>
</ul>
<a name="setReadyToStartGame-boolean-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setReadyToStartGame</h4>
<pre>public&nbsp;void&nbsp;setReadyToStartGame(boolean&nbsp;readyToStartGame)</pre>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>readyToStartGame</code> - the readyToStartGame to set</dd>
</dl>
</li>
</ul>
<a name="getResCards--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getResCards</h4>
<pre>public&nbsp;java.util.ArrayList&lt;<a href="../model/ResourceType.html" title="enum in model">ResourceType</a>&gt;&nbsp;getResCards()</pre>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the resCards of the Hand</dd>
</dl>
</li>
</ul>
<a name="setResCards-java.util.ArrayList-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setResCards</h4>
<pre>public&nbsp;void&nbsp;setResCards(java.util.ArrayList&lt;<a href="../model/ResourceType.html" title="enum in model">ResourceType</a>&gt;&nbsp;resCards)</pre>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>resCards</code> - the resCards to set in hand</dd>
</dl>
</li>
</ul>
<a name="getHand--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getHand</h4>
<pre>public&nbsp;<a href="../model/Hand.html" title="class in model">Hand</a>&nbsp;getHand()</pre>
<div class="block">get player's Hand</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>hand</dd>
</dl>
</li>
</ul>
<a name="getPlayerControl--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getPlayerControl</h4>
<pre>public&nbsp;<a href="../controller/PlayerControl.html" title="class in controller">PlayerControl</a>&nbsp;getPlayerControl()</pre>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the playerControl</dd>
</dl>
</li>
</ul>
<a name="getKnightCount--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getKnightCount</h4>
<pre>public&nbsp;int&nbsp;getKnightCount()</pre>
<div class="block">get knight count</div>
<dl>
<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
<dd><code><a href="../model/Player.html#getKnightCount--">getKnightCount</a></code>&nbsp;in class&nbsp;<code><a href="../model/Player.html" title="class in model">Player</a></code></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>knightCount</dd>
</dl>
</li>
</ul>
<a name="getSettlements--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getSettlements</h4>
<pre>public&nbsp;java.util.ArrayList&lt;<a href="../model/Settlement.html" title="class in model">Settlement</a>&gt;&nbsp;getSettlements()</pre>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the settlements</dd>
</dl>
</li>
</ul>
<a name="countSettlements--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>countSettlements</h4>
<pre>public&nbsp;int&nbsp;countSettlements()</pre>
<div class="block">Count of settlments</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
</dl>
</li>
</ul>
<a name="countRoads--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>countRoads</h4>
<pre>public&nbsp;int&nbsp;countRoads()</pre>
<div class="block">Counts of Roads</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
</dl>
</li>
</ul>
<a name="countCity--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>countCity</h4>
<pre>public&nbsp;int&nbsp;countCity()</pre>
<div class="block">Counts of city</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
</dl>
</li>
</ul>
<a name="getRoads--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getRoads</h4>
<pre>public&nbsp;java.util.ArrayList&lt;<a href="../model/Road.html" title="class in model">Road</a>&gt;&nbsp;getRoads()</pre>
<dl>
<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
<dd><code><a href="../model/Player.html#getRoads--">getRoads</a></code>&nbsp;in class&nbsp;<code><a href="../model/Player.html" title="class in model">Player</a></code></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the roads</dd>
</dl>
</li>
</ul>
<a name="getCities--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getCities</h4>
<pre>public&nbsp;java.util.ArrayList&lt;<a href="../model/City.html" title="class in model">City</a>&gt;&nbsp;getCities()</pre>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the cities</dd>
</dl>
</li>
</ul>
<a name="getHarbours--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getHarbours</h4>
<pre>public&nbsp;java.util.ArrayList&lt;<a href="../model/Harbour.html" title="enum in model">Harbour</a>&gt;&nbsp;getHarbours()</pre>
<div class="block">Getter for harbours</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
</dl>
</li>
</ul>
<a name="discardCard--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>discardCard</h4>
<pre>public&nbsp;void&nbsp;discardCard()</pre>
<div class="block">Abstract method discardCard for bot</div>
</li>
</ul>
<a name="isCanPlayDevCard--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isCanPlayDevCard</h4>
<pre>public&nbsp;boolean&nbsp;isCanPlayDevCard()</pre>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the canPlayDevCard</dd>
</dl>
</li>
</ul>
<a name="setCanPlayDevCard-boolean-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setCanPlayDevCard</h4>
<pre>public&nbsp;void&nbsp;setCanPlayDevCard(boolean&nbsp;canPlayDevCard)</pre>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>canPlayDevCard</code> - the canPlayDevCard to set</dd>
</dl>
</li>
</ul>
<a name="createPlayerControl--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>createPlayerControl</h4>
<pre>public&nbsp;void&nbsp;createPlayerControl()</pre>
</li>
</ul>
<a name="getDevCardCount--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getDevCardCount</h4>
<pre>public&nbsp;int&nbsp;getDevCardCount()</pre>
<div class="block">Gets the amount of cards the player owns</div>
<dl>
<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
<dd><code><a href="../model/Player.html#getDevCardCount--">getDevCardCount</a></code>&nbsp;in class&nbsp;<code><a href="../model/Player.html" title="class in model">Player</a></code></dd>
<dt><span class="returnLabel">Returns:</span></dt>
</dl>
</li>
</ul>
<a name="getDevVictoryPoints--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getDevVictoryPoints</h4>
<pre>public&nbsp;int&nbsp;getDevVictoryPoints()</pre>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the devVictoryPoints</dd>
</dl>
</li>
</ul>
<a name="setDevVictoryPoints-int-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setDevVictoryPoints</h4>
<pre>public&nbsp;void&nbsp;setDevVictoryPoints(int&nbsp;devVictoryPoints)</pre>
<div class="block">Sets the devVictoryPoints</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>devVictoryPoints</code> - </dd>
</dl>
</li>
</ul>
<a name="setRoadBuilding-boolean-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setRoadBuilding</h4>
<pre>public&nbsp;void&nbsp;setRoadBuilding(boolean&nbsp;roadBuilding)</pre>
<div class="block">Sets the roadBuilding</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>roadBuilding</code> - </dd>
</dl>
</li>
</ul>
<a name="isRoadBuilding--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isRoadBuilding</h4>
<pre>public&nbsp;boolean&nbsp;isRoadBuilding()</pre>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>roadBuilding</dd>
</dl>
</li>
</ul>
<a name="addTemporarilyRoadSkin-view.RoadSkin-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>addTemporarilyRoadSkin</h4>
<pre>public&nbsp;void&nbsp;addTemporarilyRoadSkin(<a href="../view/RoadSkin.html" title="class in view">RoadSkin</a>&nbsp;roadSkin)</pre>
<div class="block">Adds black roadSkins to the list temporarilyRoadSkins 
 when the "roadbuilding"-DevelopmentCard is played
 Send the roadBuilding message to the server in case both roads are built</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>roadSkin</code> - </dd>
</dl>
</li>
</ul>
<a name="setStatus-java.lang.String-boolean-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setStatus</h4>
<pre>public&nbsp;void&nbsp;setStatus(java.lang.String&nbsp;status,
                      boolean&nbsp;server)</pre>
<dl>
<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
<dd><code><a href="../model/Player.html#setStatus-java.lang.String-boolean-">setStatus</a></code>&nbsp;in class&nbsp;<code><a href="../model/Player.html" title="class in model">Player</a></code></dd>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>status</code> - the status to set</dd>
<dd><code>server</code> - true if server wants to change the status 
 (or if client changes status and doesn't want to change the status on the GUI)</dd>
</dl>
</li>
</ul>
<a name="isDiscardCards--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isDiscardCards</h4>
<pre>public&nbsp;boolean&nbsp;isDiscardCards()</pre>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the discardCards</dd>
</dl>
</li>
</ul>
<a name="setDiscardCards-boolean-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setDiscardCards</h4>
<pre>public&nbsp;void&nbsp;setDiscardCards(boolean&nbsp;discardCards)</pre>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>discardCards</code> - the discardCards to set</dd>
</dl>
</li>
</ul>
<a name="addAndCheckKnightCount--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>addAndCheckKnightCount</h4>
<pre>public&nbsp;boolean&nbsp;addAndCheckKnightCount()</pre>
<div class="block">Adds 1 to the knightCount and checks for the largest army</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>true if player with largestArmy has changed</dd>
</dl>
</li>
</ul>
<a name="getBuildableEdges--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getBuildableEdges</h4>
<pre>public&nbsp;java.util.ArrayList&lt;<a href="../model/Edge.html" title="class in model">Edge</a>&gt;&nbsp;getBuildableEdges()</pre>
<div class="block">Gets the edges the player can build roads on</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the edges the player can build roads on</dd>
</dl>
</li>
</ul>
<a name="getBuildableVertices--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getBuildableVertices</h4>
<pre>public&nbsp;java.util.ArrayList&lt;<a href="../model/Vertex.html" title="class in model">Vertex</a>&gt;&nbsp;getBuildableVertices()</pre>
<div class="block">Gets the vertices the player can build settlements on</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the vertices the player can build settlements on</dd>
</dl>
</li>
</ul>
<a name="playRoadBuildingDevCard-boolean-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>playRoadBuildingDevCard</h4>
<pre>public&nbsp;void&nbsp;playRoadBuildingDevCard(boolean&nbsp;onlyOneRoad)</pre>
<div class="block">For Client
 Handles the request to play a roadbuilding development card</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>onlyOneRoad</code> - when player already built one of the two roads and 
 has another road and a place to build it on</dd>
</dl>
</li>
</ul>
<a name="getStatusEnglish--">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>getStatusEnglish</h4>
<pre>public&nbsp;java.lang.String&nbsp;getStatusEnglish()</pre>
<div class="block">Gets the status in English</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the status in English</dd>
</dl>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar.bottom">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.bottom.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/PlayerClient.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-files/index-1.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../model/Player.html" title="class in model"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
<li><a href="../model/PlayerColor.html" title="enum in model"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?model/PlayerClient.html" target="_top">Frames</a></li>
<li><a href="PlayerClient.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a name="skip.navbar.bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</body>
</html>
