<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (1.8.0_112) on Sun Dec 03 21:33:06 CET 2017 -->
<title>Player</title>
<meta name="date" content="2017-12-03">
<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
<script type="text/javascript" src="../script.js"></script>
</head>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="Player";
        }
    }
    catch(err) {
    }
//-->
var methods = {"i0":10,"i1":10,"i2":10,"i3":10,"i4":10,"i5":10,"i6":10,"i7":10,"i8":10,"i9":10,"i10":10,"i11":10,"i12":10,"i13":10,"i14":10,"i15":10,"i16":10,"i17":10,"i18":10,"i19":10,"i20":10,"i21":10,"i22":10,"i23":10,"i24":10,"i25":10,"i26":10,"i27":10,"i28":10,"i29":10,"i30":10,"i31":10,"i32":10};
var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
var altColor = "altColor";
var rowColor = "rowColor";
var tableTab = "tableTab";
var activeTableTab = "activeTableTab";
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/Player.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-files/index-1.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../model/Island.html" title="class in model"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
<li><a href="../model/PlayerColor.html" title="enum in model"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?model/Player.html" target="_top">Frames</a></li>
<li><a href="Player.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a name="skip.navbar.top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle">model</div>
<h2 title="Class Player" class="title">Class Player</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li>java.lang.Object</li>
<li>
<ul class="inheritance">
<li>model.Player</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<hr>
<br>
<pre>public class <span class="typeNameLabel">Player</span>
extends java.lang.Object</pre>
<div class="block">Describes a participant in the game. Stores his current state (victoryPoints, resCards, etc.).</div>
<dl>
<dt><span class="simpleTagLabel">Author:</span></dt>
<dd>Daniel Panangian</dd>
</dl>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor.summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colOne" scope="col">Constructor and Description</th>
</tr>
<tr class="altColor">
<td class="colOne"><code><span class="memberNameLink"><a href="../model/Player.html#Player-model.PlayerColor-int-java.lang.String-">Player</a></span>(<a href="../model/PlayerColor.html" title="enum in model">PlayerColor</a>&nbsp;playerColor,
      int&nbsp;playerId,
      java.lang.String&nbsp;name)</code>
<div class="block">Constructor</div>
</td>
</tr>
</table>
</li>
</ul>
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method.summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr id="i0" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/Player.html#buildCity-model.Vertex-">buildCity</a></span>(<a href="../model/Vertex.html" title="class in model">Vertex</a>&nbsp;vertex)</code>
<div class="block">Try to build a new city</div>
</td>
</tr>
<tr id="i1" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/Player.html#buildRoad-model.Edge-">buildRoad</a></span>(<a href="../model/Edge.html" title="class in model">Edge</a>&nbsp;edge)</code>
<div class="block">Try to build a new road</div>
</td>
</tr>
<tr id="i2" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/Player.html#buildSettlement-model.Vertex-">buildSettlement</a></span>(<a href="../model/Vertex.html" title="class in model">Vertex</a>&nbsp;vertex)</code>
<div class="block">Try to build a new settlement</div>
</td>
</tr>
<tr id="i3" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/Player.html#canBuildRoad-model.Edge-">canBuildRoad</a></span>(<a href="../model/Edge.html" title="class in model">Edge</a>&nbsp;edge)</code>
<div class="block">check if the rules for building a road is fulfilled
 Rules:
 One of two vertices of the edge must consist a building (road or settlement or city) and 
 the building must belong to the player</div>
</td>
</tr>
<tr id="i4" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/Player.html#canBuildSettlement-model.Vertex-">canBuildSettlement</a></span>(<a href="../model/Vertex.html" title="class in model">Vertex</a>&nbsp;vertex)</code>
<div class="block">check if the rules for building a settlement is fulfilled
 Rules:
 First building phase:
 a settlement must built within two space of another city or settlement
 Next turn: 
 a settlement must be built within two space of another city or settlement and must be built on an 
 end of a player's road</div>
</td>
</tr>
<tr id="i5" class="rowColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/Player.html#countCity--">countCity</a></span>()</code>&nbsp;</td>
</tr>
<tr id="i6" class="altColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/Player.html#countRoads--">countRoads</a></span>()</code>&nbsp;</td>
</tr>
<tr id="i7" class="rowColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/Player.html#countSettlements--">countSettlements</a></span>()</code>&nbsp;</td>
</tr>
<tr id="i8" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/Player.html#dice--">dice</a></span>()</code>
<div class="block">lets the player dice</div>
</td>
</tr>
<tr id="i9" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/Player.html#endingTurn--">endingTurn</a></span>()</code>&nbsp;</td>
</tr>
<tr id="i10" class="altColor">
<td class="colFirst"><code>java.util.ArrayList&lt;<a href="../model/ResourceType.html" title="enum in model">ResourceType</a>&gt;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/Player.html#getCards--">getCards</a></span>()</code>&nbsp;</td>
</tr>
<tr id="i11" class="rowColor">
<td class="colFirst"><code><a href="../model/Catan.html" title="class in model">Catan</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/Player.html#getCatan--">getCatan</a></span>()</code>&nbsp;</td>
</tr>
<tr id="i12" class="altColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/Player.html#getKnightCount--">getKnightCount</a></span>()</code>
<div class="block">get knight count</div>
</td>
</tr>
<tr id="i13" class="rowColor">
<td class="colFirst"><code>java.lang.String</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/Player.html#getName--">getName</a></span>()</code>&nbsp;</td>
</tr>
<tr id="i14" class="altColor">
<td class="colFirst"><code><a href="../model/Hand.html" title="class in model">Hand</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/Player.html#getPlayerCards--">getPlayerCards</a></span>()</code>
<div class="block">get player's Hand</div>
</td>
</tr>
<tr id="i15" class="rowColor">
<td class="colFirst"><code><a href="../model/PlayerColor.html" title="enum in model">PlayerColor</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/Player.html#getPlayerColor--">getPlayerColor</a></span>()</code>
<div class="block">get player's color</div>
</td>
</tr>
<tr id="i16" class="altColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/Player.html#getPlayerId--">getPlayerId</a></span>()</code>&nbsp;</td>
</tr>
<tr id="i17" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/Player.html#getRelocateRobber--">getRelocateRobber</a></span>()</code>&nbsp;</td>
</tr>
<tr id="i18" class="altColor">
<td class="colFirst"><code>java.util.ArrayList&lt;<a href="../model/Settlement.html" title="class in model">Settlement</a>&gt;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/Player.html#getSettlements--">getSettlements</a></span>()</code>&nbsp;</td>
</tr>
<tr id="i19" class="rowColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/Player.html#getVictoryPoints--">getVictoryPoints</a></span>()</code>
<div class="block">get victory point</div>
</td>
</tr>
<tr id="i20" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/Player.html#isBuildCityPressed--">isBuildCityPressed</a></span>()</code>&nbsp;</td>
</tr>
<tr id="i21" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/Player.html#isBuildRoadPressed--">isBuildRoadPressed</a></span>()</code>&nbsp;</td>
</tr>
<tr id="i22" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/Player.html#isBuildSettlementPressed--">isBuildSettlementPressed</a></span>()</code>&nbsp;</td>
</tr>
<tr id="i23" class="rowColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/Player.html#longestRoad--">longestRoad</a></span>()</code>&nbsp;</td>
</tr>
<tr id="i24" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/Player.html#setBuildCityPressed-boolean-">setBuildCityPressed</a></span>(boolean&nbsp;buildCityPressed)</code>&nbsp;</td>
</tr>
<tr id="i25" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/Player.html#setBuildRoadPressed-boolean-">setBuildRoadPressed</a></span>(boolean&nbsp;buildRoadPressed)</code>&nbsp;</td>
</tr>
<tr id="i26" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/Player.html#setBuildSettlementPressed-boolean-">setBuildSettlementPressed</a></span>(boolean&nbsp;bool)</code>&nbsp;</td>
</tr>
<tr id="i27" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/Player.html#setCards-java.util.ArrayList-">setCards</a></span>(java.util.ArrayList&lt;<a href="../model/ResourceType.html" title="enum in model">ResourceType</a>&gt;&nbsp;resCards)</code>&nbsp;</td>
</tr>
<tr id="i28" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/Player.html#setCatan-model.Catan-">setCatan</a></span>(<a href="../model/Catan.html" title="class in model">Catan</a>&nbsp;catan)</code>&nbsp;</td>
</tr>
<tr id="i29" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/Player.html#setHasLargestArmy-java.lang.Boolean-">setHasLargestArmy</a></span>(java.lang.Boolean&nbsp;b)</code>&nbsp;</td>
</tr>
<tr id="i30" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/Player.html#setRelocateRobber-boolean-">setRelocateRobber</a></span>(boolean&nbsp;relocateRobber)</code>&nbsp;</td>
</tr>
<tr id="i31" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/Player.html#setVictoryPoints-int-">setVictoryPoints</a></span>(int&nbsp;newVictoryPoints)</code>
<div class="block">set victory point</div>
</td>
</tr>
<tr id="i32" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/Player.html#trade--">trade</a></span>()</code>&nbsp;</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
<code>equals, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor.detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a name="Player-model.PlayerColor-int-java.lang.String-">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>Player</h4>
<pre>public&nbsp;Player(<a href="../model/PlayerColor.html" title="enum in model">PlayerColor</a>&nbsp;playerColor,
              int&nbsp;playerId,
              java.lang.String&nbsp;name)</pre>
<div class="block">Constructor</div>
</li>
</ul>
</li>
</ul>
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method.detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="getPlayerCards--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getPlayerCards</h4>
<pre>public&nbsp;<a href="../model/Hand.html" title="class in model">Hand</a>&nbsp;getPlayerCards()</pre>
<div class="block">get player's Hand</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>playerCards</dd>
</dl>
</li>
</ul>
<a name="getPlayerColor--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getPlayerColor</h4>
<pre>public&nbsp;<a href="../model/PlayerColor.html" title="enum in model">PlayerColor</a>&nbsp;getPlayerColor()</pre>
<div class="block">get player's color</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>playerColor</dd>
</dl>
</li>
</ul>
<a name="getVictoryPoints--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getVictoryPoints</h4>
<pre>public&nbsp;int&nbsp;getVictoryPoints()</pre>
<div class="block">get victory point</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>victoryPoints</dd>
</dl>
</li>
</ul>
<a name="setVictoryPoints-int-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setVictoryPoints</h4>
<pre>public&nbsp;void&nbsp;setVictoryPoints(int&nbsp;newVictoryPoints)</pre>
<div class="block">set victory point</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>newVictoryPoints</code> - </dd>
</dl>
</li>
</ul>
<a name="getKnightCount--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getKnightCount</h4>
<pre>public&nbsp;int&nbsp;getKnightCount()</pre>
<div class="block">get knight count</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>knightCount</dd>
</dl>
</li>
</ul>
<a name="setHasLargestArmy-java.lang.Boolean-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setHasLargestArmy</h4>
<pre>public&nbsp;void&nbsp;setHasLargestArmy(java.lang.Boolean&nbsp;b)</pre>
</li>
</ul>
<a name="buildRoad-model.Edge-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>buildRoad</h4>
<pre>public&nbsp;void&nbsp;buildRoad(<a href="../model/Edge.html" title="class in model">Edge</a>&nbsp;edge)</pre>
<div class="block">Try to build a new road</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>edge</code> - where road is tried to be build on</dd>
<dd><code>gameSkin</code> - </dd>
</dl>
</li>
</ul>
<a name="buildSettlement-model.Vertex-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>buildSettlement</h4>
<pre>public&nbsp;void&nbsp;buildSettlement(<a href="../model/Vertex.html" title="class in model">Vertex</a>&nbsp;vertex)</pre>
<div class="block">Try to build a new settlement</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>vertex</code> - where settlement is tried to be build on</dd>
<dd><code>gameSkin</code> - </dd>
</dl>
</li>
</ul>
<a name="dice--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>dice</h4>
<pre>public&nbsp;void&nbsp;dice()</pre>
<div class="block">lets the player dice</div>
</li>
</ul>
<a name="longestRoad--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>longestRoad</h4>
<pre>public&nbsp;int&nbsp;longestRoad()</pre>
</li>
</ul>
<a name="buildCity-model.Vertex-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>buildCity</h4>
<pre>public&nbsp;void&nbsp;buildCity(<a href="../model/Vertex.html" title="class in model">Vertex</a>&nbsp;vertex)</pre>
<div class="block">Try to build a new city</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>vertex</code> - where city is tried to be build on</dd>
<dd><code>gameSkin</code> - </dd>
</dl>
</li>
</ul>
<a name="trade--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>trade</h4>
<pre>public&nbsp;void&nbsp;trade()</pre>
</li>
</ul>
<a name="getCards--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getCards</h4>
<pre>public&nbsp;java.util.ArrayList&lt;<a href="../model/ResourceType.html" title="enum in model">ResourceType</a>&gt;&nbsp;getCards()</pre>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the resCards</dd>
</dl>
</li>
</ul>
<a name="getName--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getName</h4>
<pre>public&nbsp;java.lang.String&nbsp;getName()</pre>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the name</dd>
</dl>
</li>
</ul>
<a name="setCards-java.util.ArrayList-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setCards</h4>
<pre>public&nbsp;void&nbsp;setCards(java.util.ArrayList&lt;<a href="../model/ResourceType.html" title="enum in model">ResourceType</a>&gt;&nbsp;resCards)</pre>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>resCards</code> - the resCards to set</dd>
</dl>
</li>
</ul>
<a name="getPlayerId--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getPlayerId</h4>
<pre>public&nbsp;int&nbsp;getPlayerId()</pre>
</li>
</ul>
<a name="setCatan-model.Catan-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setCatan</h4>
<pre>public&nbsp;void&nbsp;setCatan(<a href="../model/Catan.html" title="class in model">Catan</a>&nbsp;catan)</pre>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>catan</code> - the catan to set</dd>
</dl>
</li>
</ul>
<a name="getCatan--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getCatan</h4>
<pre>public&nbsp;<a href="../model/Catan.html" title="class in model">Catan</a>&nbsp;getCatan()</pre>
</li>
</ul>
<a name="getSettlements--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getSettlements</h4>
<pre>public&nbsp;java.util.ArrayList&lt;<a href="../model/Settlement.html" title="class in model">Settlement</a>&gt;&nbsp;getSettlements()</pre>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the settlements</dd>
</dl>
</li>
</ul>
<a name="canBuildSettlement-model.Vertex-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>canBuildSettlement</h4>
<pre>public&nbsp;boolean&nbsp;canBuildSettlement(<a href="../model/Vertex.html" title="class in model">Vertex</a>&nbsp;vertex)</pre>
<div class="block">check if the rules for building a settlement is fulfilled
 Rules:
 First building phase:
 a settlement must built within two space of another city or settlement
 Next turn: 
 a settlement must be built within two space of another city or settlement and must be built on an 
 end of a player's road</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>edge</code> - </dd>
</dl>
</li>
</ul>
<a name="isBuildSettlementPressed--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isBuildSettlementPressed</h4>
<pre>public&nbsp;boolean&nbsp;isBuildSettlementPressed()</pre>
</li>
</ul>
<a name="setBuildSettlementPressed-boolean-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setBuildSettlementPressed</h4>
<pre>public&nbsp;void&nbsp;setBuildSettlementPressed(boolean&nbsp;bool)</pre>
</li>
</ul>
<a name="isBuildRoadPressed--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isBuildRoadPressed</h4>
<pre>public&nbsp;boolean&nbsp;isBuildRoadPressed()</pre>
</li>
</ul>
<a name="setBuildRoadPressed-boolean-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setBuildRoadPressed</h4>
<pre>public&nbsp;void&nbsp;setBuildRoadPressed(boolean&nbsp;buildRoadPressed)</pre>
</li>
</ul>
<a name="isBuildCityPressed--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isBuildCityPressed</h4>
<pre>public&nbsp;boolean&nbsp;isBuildCityPressed()</pre>
</li>
</ul>
<a name="setBuildCityPressed-boolean-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setBuildCityPressed</h4>
<pre>public&nbsp;void&nbsp;setBuildCityPressed(boolean&nbsp;buildCityPressed)</pre>
</li>
</ul>
<a name="canBuildRoad-model.Edge-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>canBuildRoad</h4>
<pre>public&nbsp;boolean&nbsp;canBuildRoad(<a href="../model/Edge.html" title="class in model">Edge</a>&nbsp;edge)</pre>
<div class="block">check if the rules for building a road is fulfilled
 Rules:
 One of two vertices of the edge must consist a building (road or settlement or city) and 
 the building must belong to the player</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>edge</code> - </dd>
</dl>
</li>
</ul>
<a name="countSettlements--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>countSettlements</h4>
<pre>public&nbsp;int&nbsp;countSettlements()</pre>
</li>
</ul>
<a name="countRoads--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>countRoads</h4>
<pre>public&nbsp;int&nbsp;countRoads()</pre>
</li>
</ul>
<a name="countCity--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>countCity</h4>
<pre>public&nbsp;int&nbsp;countCity()</pre>
</li>
</ul>
<a name="endingTurn--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>endingTurn</h4>
<pre>public&nbsp;void&nbsp;endingTurn()</pre>
</li>
</ul>
<a name="getRelocateRobber--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getRelocateRobber</h4>
<pre>public&nbsp;boolean&nbsp;getRelocateRobber()</pre>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the relocateRobber</dd>
</dl>
</li>
</ul>
<a name="setRelocateRobber-boolean-">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>setRelocateRobber</h4>
<pre>public&nbsp;void&nbsp;setRelocateRobber(boolean&nbsp;relocateRobber)</pre>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>relocateRobber</code> - the boolean relocateRobber to be set</dd>
</dl>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar.bottom">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.bottom.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/Player.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-files/index-1.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../model/Island.html" title="class in model"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
<li><a href="../model/PlayerColor.html" title="enum in model"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?model/Player.html" target="_top">Frames</a></li>
<li><a href="Player.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a name="skip.navbar.bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</body>
</html>
