package view;

import java.net.URISyntaxException;
import java.util.ArrayList;

import game.Settings;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.scene.control.Button;
import javafx.scene.control.RadioButton;
import javafx.scene.control.ToggleGroup;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.layout.StackPane;
import javafx.scene.layout.VBox;
import javafx.scene.paint.Color;
import javafx.scene.shape.Rectangle;
import javafx.scene.text.Font;
import javafx.scene.text.Text;
import model.Catan;
import model.Dice;
import model.Hand;
import model.Player;
import model.PlayerClient;
import model.Tile;


/**
 * View of the game board. Contains e.g. view of island.
 * @author Daniel Panangian, Stefanie Kloss
 */
public class GameSkin extends StackPane {
	
	private IslandSkin islandSkin;
	private HandSkin handSkin;

	public GameSkin(Catan catan){
		
		setPrefSize(Settings.GAME_SKIN_WIDTH, Settings.GAME_SKIN_HEIGHT);
		this.islandSkin = catan.getIsland().getSkin();
//		this.handSkin = catan.getHand().getHandSkin();
		PlayerControlSkin playerControl = catan.getPlayerClient().getPlayerControl().getSkin();
		GameControlSkin gameControl = catan.getGameControl().getSkin();
		String path;
		try {
			path = GameSkin.class.getResource("/img/background_2.jpg" ).toURI().toString();
			Image image = new Image(path);
			ImageView waterView = new ImageView(image);

			getChildren().addAll (waterView,islandSkin,playerControl,gameControl);
//			getChildren().add(handSkin);
		} catch (URISyntaxException | NullPointerException e) {
			System.out.println("Specified file does not exist.");
			e.printStackTrace();
			getChildren().add(islandSkin);
			getChildren().add(handSkin);
		}
		locateDice(catan.getDice());
//		locateHand(catan.getHand());
	}
	
	public void chooseRobbingVictim(Tile tile, ArrayList<Player> players, PlayerClient playerClient) {
		
		Text text = new Text("\nWhich player do you want to rob from?");
		text.setFont(Font.loadFont(Settings.OSWALD_PATH, 14));
		text.setFill(Color.ANTIQUEWHITE);
		RadioButton[] playerButtons = new RadioButton[players.size()];
		ToggleGroup toggleGroup = new ToggleGroup();
		VBox vBox = new VBox();
		vBox.setSpacing(10);
		vBox.getChildren().add(text);
		for(int i = 0; i < players.size(); i++){
			playerButtons[i] = new RadioButton(players.get(i).getName() + ", " + players.get(i).getPlayerColor().toServerString());
			playerButtons[i].setToggleGroup(toggleGroup);
			playerButtons[i].setFont(Font.loadFont(Settings.OSWALD_PATH, 14));
			playerButtons[i].setTextFill(Color.ANTIQUEWHITE);
			vBox.getChildren().add(playerButtons[i]);
		}
		Button confirm = new Button("OK");
		confirm.setFont(Font.loadFont(Settings.OSWALD_PATH, 14));
		vBox.getChildren().add(confirm);
		playerClient.getCatan().getGameManager().getApp().popUpPane(vBox);
		
		confirm.setOnAction(new EventHandler<ActionEvent>(){
			@Override
			public void handle(ActionEvent event) {
				for(int i = 0; i < players.size(); i++){
					if(playerButtons[i].isSelected()){	
						Player player = players.get(i);
						ArrayList<Player> victim = new ArrayList<Player>();
						victim.add(player);
						playerClient.robbingVictim(tile, victim);
				}	}
			}
		});
		
		
		
	}
	
	/**
	 * locates the dices on the gameSkin
	 * @param dice
	 */
	private void locateDice(Dice dice){
		
		Rectangle dice1 = dice.getDiceSkin().getDice1();
		Rectangle dice2 = dice.getDiceSkin().getDice2();
		
		dice1.setTranslateX(380);		//TODO magic numbers entfernen
		dice1.setTranslateY(290);
		dice2.setTranslateX(430);
		dice2.setTranslateY(290);
		
		getChildren().add(dice1);
		getChildren().add(dice2);
		
	}
	
	private void locateHand(Hand hand) {
		Rectangle handRect = hand.getHandSkin().getHand();
	
		handRect.setTranslateX(0);
		handRect.setTranslateY(0);
		
		getChildren().add(handRect);
	}
	
	/**
	 * @return the island skin
	 */
	public IslandSkin getIslandSkin(){
		return this.islandSkin;
	}

	
}
