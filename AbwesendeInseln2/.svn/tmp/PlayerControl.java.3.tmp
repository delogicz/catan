package controller;

import javafx.event.EventHandler;
import javafx.scene.control.Button;
import javafx.scene.input.MouseEvent;
import model.*;
import view.PlayerControlSkin;

/**
 * Controller class to handle user's input on the game
 * 
 * @author Daniel Panangian
 */
public class PlayerControl {

	private PlayerControlSkin skin;
	private PlayerClient player;
	
	/**
	 * Constructor
	 */
	public PlayerControl(PlayerClient player){
		
		this.player = player;
		skin = new PlayerControlSkin(this);
		this.enableAllButtons();

	}

	/**
	 * Update View of user's Hand
	 */
	public void updateHandView() {
		skin.getRoad().setText("Roads: " + player.countRoads());
		skin.getCity().setText("Cities: " + player.countCity());
		skin.getSettlement().setText("Settlements: " + player.countSettlements());
		skin.getLumber().setText("Lumber: " + player.getHand().getLumberCount());
		skin.getBrick().setText("Brick: " + player.getHand().getBrickCount());
		skin.getWool().setText("Wool: " + player.getHand().getWoolCount());
		skin.getGrain().setText("Grain: " + player.getHand().getGrainCount());
		skin.getOre().setText("Ore: " + player.getHand().getOreCount());
		

	}
	/**
	 * React to buildSettlement Button 
	 * set BuildSetttlemenPressed to true
	 */
	public final EventHandler<MouseEvent> buildSettlementHandler = new EventHandler<MouseEvent>() {
		@Override
		public void handle(MouseEvent mouseEvent) {
			
			player.setBuildSettlementPressed(true);
			
		}
	};
	/**
	 * React to buildRoad Button 
	 * set BuildRoadPressed to true
	 */
	public final EventHandler<MouseEvent> buildRoadHandler = new EventHandler<MouseEvent>() {
		@Override
		public void handle(MouseEvent mouseEvent) {
			
			player.setBuildRoadPressed(true);
			
		}
	};
	/**
	 * React to buildCity Button 
	 * set BuildCityPressed to true
	 */
	public final EventHandler<MouseEvent> buildCityHandler = new EventHandler<MouseEvent>() {
		@Override
		public void handle(MouseEvent mouseEvent) {
			
			player.setBuildCityPressed(true);
			
		}
	};
	/**
	 * React to buyDevCard Button 
	 * Try to buy a Development Card
	 */
	public final EventHandler<MouseEvent> buyDevCardHandler = new EventHandler<MouseEvent>() {
		@Override
		public void handle(MouseEvent mouseEvent) {
			
//			player.buyDevCard();
			
		}
	};
	/**
	 * React to endTurn Button 
	 * Ending turn , change the player and upddate the hand's View
	 */
	public final EventHandler<MouseEvent> endTurnHandler = new EventHandler<MouseEvent>() {
		@Override
		public void handle(MouseEvent mouseEvent) {
			
			player.getCatan().getGameManager().getClient().sendEndTurn();
			
		}
	};
	/**
	 * React to rollDice Button 
	 * roll the dice, if 7 disable the button until the player moves the robber
	 */
	public final EventHandler<MouseEvent> rollDiceHandler = new EventHandler<MouseEvent>() {
		@Override
		public void handle(MouseEvent mouseEvent) {

			player.getCatan().getGameManager().getClient().sendRollDice();
		}
	};
		
	public void dice(){
		player.getCatan().dice(player);
		updateHandView();
		disableRollDiceButton();
		if (player.getCatan().getDiceResult() == 7){
			disableAllButtons();
		}
		else{
			enableBuildRoadButton();
			enableBuildSetButton();
			enableBuildCityButton();
			enableBuyDevCardButton();
			enableEndTurnButton();	
		}
	}
	

	/**
	 * Enable endTurn button
	 */
	private void enableEndTurnButton() {
		Button endTurnButton = skin.getEndTurnButton();
		endTurnButton.setDisable(false);
		endTurnButton.addEventHandler(MouseEvent.MOUSE_CLICKED, endTurnHandler);
		
	}
	/**
	 * Enable buildSet button
	 */
	public void enableBuildSetButton() {
		Button buildSetButton = skin.getBuildSetButton();
		buildSetButton.setDisable(false);
		buildSetButton.addEventHandler(MouseEvent.MOUSE_CLICKED, buildSettlementHandler);
		
	}
	/**
	 * Disable buildSet button
	 */
	public void disableBuildSetButton() {
		Button buildSetButton = skin.getBuildSetButton();
		player.setBuildSettlementPressed(false);
		buildSetButton.setDisable(true);
		
		
	}
	/**
	 * Enable buildRoad button
	 */
	public void enableBuildRoadButton() {
		Button buildRoadButton = skin.getBuildRoadButton();
		buildRoadButton.setDisable(false);
		buildRoadButton.addEventHandler(MouseEvent.MOUSE_CLICKED, buildRoadHandler);
		
	}
	/**
	 * Disable buildRoad button
	 */
	public void disableBuildRoadButton() {
		Button buildRoadButton = skin.getBuildRoadButton();
		player.setBuildRoadPressed(false);
		buildRoadButton.setDisable(true);
		
	}
	/**
	 * Enable buildCity button
	 */
	public void enableBuildCityButton() {
		Button buildCityButton = skin.getBuildCityButton();
		buildCityButton.setDisable(false);
		buildCityButton.addEventHandler(MouseEvent.MOUSE_CLICKED, buildCityHandler);
		
	}
	/**
	 * Disable buildCity button
	 */
	public void disableBuildCityButton() {
		Button buildCityButton = skin.getBuildCityButton();
		player.setBuildCityPressed(false);
		buildCityButton.setDisable(true);
		
	}
	/**
	 * Enable buyDevCard button
	 */
	public void enableBuyDevCardButton() {
		Button buyDevCardButton = skin.getBuyDevCardButton();
		buyDevCardButton.setDisable(false);
		buyDevCardButton.addEventHandler(MouseEvent.MOUSE_CLICKED, buyDevCardHandler);
		
	}
	/**
	 * Disable buyDevCard button
	 */
	public void disableBuyDevCardButton() {
		Button buyDevCardButton = skin.getBuyDevCardButton();
		buyDevCardButton.setDisable(true);
		
	}
	/**
	 * Enable rollDice button
	 */
	public void enableRollDiceButton() {
		Button RollDiceButton = skin.getRollDiceButton();
		RollDiceButton.setDisable(false);
		RollDiceButton.addEventHandler(MouseEvent.MOUSE_CLICKED, rollDiceHandler);
		
	}
	/**
	 * Disable rollDice button
	 */
	public void disableRollDiceButton() {
		Button RollDiceButton = skin.getRollDiceButton();
		RollDiceButton.setDisable(true);
		
	}
	/**
	 * Disable endTurn button
	 */
	public void disableEndTurnButton() {
		Button EndTurnButton = skin.getEndTurnButton();
		EndTurnButton.setDisable(true);
	}
	/**
	 * Disable all controller button
	 */
	public void disableAllButtons() {
		disableEndTurnButton();
		disableBuildCityButton();
		disableBuildRoadButton();
		disableBuildSetButton();
		disableBuyDevCardButton();
		disableRollDiceButton();
	}
	/**
	 * Enable all controller button
	 */
	public void enableAllButtons() {
		enableEndTurnButton();
		enableBuildCityButton();
		enableBuildRoadButton();
		enableBuildSetButton();
		enableBuyDevCardButton();
	}
	/**
	 * @return skin
	 */
	public PlayerControlSkin getSkin() {
		return skin;
	}

	public Player getPlayer() {
		return player;
	}


}